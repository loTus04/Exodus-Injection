(window.webpackJsonp=window.webpackJsonp||[]).push([[282],{4230:function(t,e,n){"use strict";n.r(e);var s=n(1737),a=n.n(s),r=n(219),i=n.n(r),c=n(155),o=n(4428),h=n(4),d=n(3),u=n(469),l=n(896);const m=[{name:"BitTorrent Old",ticker:"BTTOLD",decimal:6,contract:"1002000",isCustom:!1},{name:"Tether USD TRX",ticker:"TRX-USDT",decimal:6,contract:"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t",isCustom:!1,energy:14631},{name:"WINK",ticker:"WIN",decimal:6,contract:"TLa2f6VPqDgRE67v1736s7bJ8Ray5wYjU7",isCustom:!1,energy:13248},{name:"JUST",ticker:"JST",decimal:18,contract:"TCFLL5dx5ZJdKnWuesXxi1VPwjLVmWZZy9",isCustom:!1,energy:13516},{name:"Bridge Token",ticker:"BRG",decimal:6,contract:"TJvqNiWUN2v2NBG12UhfV7WSvReJkRP3VC",isCustom:!1,energy:13429},{name:"USDC TRX",ticker:"TRX-USDC",decimal:6,contract:"TEkxiTehnzSmSe2XqrBj4w32RUN966rdz8",isCustom:!1},{name:"BitTorrent",ticker:"BTT",decimal:18,contract:"TAFjULxiVgT4qWk6UZwjqwZXTSaGaqnVp4",isCustom:!1}];class TRXCoin extends(Object(u.g)(Object(u.h)(c.a))){constructor({alias:t,feeData:e,explorers:n,txWebUrl:s,socket:a}){super({alias:t,name:"Tron",ticker:"TRX",decimal:6,derivation:"m/44'/195'/0'",unspendableBalance:"0",explorers:n,txWebUrl:s,socket:a,feeData:e}),this.derivation="m/44'/195'/0'",this.plugins=[new l.a],this.transactions=[],this.tokens={},this.balances={staking:{}},this.eventEmmiter.on(this.ticker+"::confirmed-socket-tx",(t,e,n)=>{this.getInfo(),e&&e.direction?this.bus.$emit("socket::newtx",{id:t,ticker:n,amount:e.amount,txid:e.txid}):this.bus.$emit("socket::newtx::outgoing",{id:t,ticker:n})})}get instance(){return{id:this.id,ticker:this.ticker,name:this.name,alias:this.alias,assetName:this.assetName,decimal:this.decimal,parent:this.parent,BN:this.BN,toCurrencyUnit:(t,e)=>this.toCurrencyUnit(t,e),toMinimalUnit:(t,e)=>this.toMinimalUnit(t,e),tokens:()=>this.tokens,getFee:t=>this.getFee(t),getTRC20Fee:t=>this.getTRC20Fee(t),feeCoefficient:this.coefficient,feeDefault:this.feeData&&this.feeData.fee,feeTRC20:this.feeData.feeTRC20}}getExcludedTokenList(){return[]}async loadTokensList(t){m.forEach(e=>{const n=this.createToken(e.name,e.ticker,e.decimal,e.contract,e.contract,JSON.parse(e.isCustom),!0,{feeData:{energy:e.energy}});t.push(n),t.store.walletsCollection[n.alias].set(n.id.toUpperCase(),n),this.tokens[e.contract]=n})}async fetchUserTokens(){return[]}createToken(...t){return new o.g(this.ticker,...t)}loadWallet(t){return new Promise((e,n)=>{const s=a.a.fromMasterSeed(t).derive(this.derivation),r=i.a.utils.crypto.getAddressFromPriKey(s._privateKey);s||n(new h.i({type:d.x,error:new Error("private key is empty"),instance:this})),this.privateKey=i.a.utils.bytes.byteArray2hexStr(s._privateKey),this.address=i.a.utils.crypto.getBase58CheckAddress(r),this.tronWeb=new i.a({fullHost:this.getProvider("node").config.baseUrl,privateKey:this.privateKey}),e(this)})}getAddress(){if(this.privateKey){const t=i.a.utils.crypto.getAddressFromPriKey(i.a.utils.bytes.hexStr2byteArray(this.privateKey));return i.a.utils.crypto.getBase58CheckAddress(t)}throw new h.i({type:d.x,error:new Error("can't get private key"),instance:this})}async validateAddress(t){try{return i.a.utils.crypto.isAddressValid(t)}catch(t){return!1}}async createTransaction({address:t,amount:e}){return{address:t,amount:e}}async createTokenTransaction(t){return t}async sendTransaction({address:t,amount:e,contract:n=null,feeLimit:s=null,transfer:a=!1}){const r=[];if(a)return this.sendTokenTransaction({address:t,amount:e,contract:n,feeLimit:s});try{return{txid:(await this.tronWeb.trx.send(t,e,this.privateKey)).transaction.txID}}catch(t){r.push(t)}try{const n=this.getProvider("send").helper.transactionBuilder.buildTransferTransaction("TRX",this.address,t,e);return this.getProvider("send").sendTransaction(n,this.privateKey)}catch(t){r.push(t)}throw new h.i({type:d.s,error:new Error(r),instance:this})}async sendTokenTransaction({address:t,amount:e,contract:n,feeLimit:s}){if("trc20"===(Number(n)?"trc10":"trc20"))try{const a=await this.tronWeb.contract().at(n);return{txid:await a.transfer(t,e).send({feeLimit:s},this.privateKey)}}catch(t){throw new h.i({type:d.s,error:new Error(t),instance:this})}return{txid:(await this.tronWeb.trx.sendToken(t,e,n,{privateKey:this.privateKey})).transaction.txID}}async sendRawTransaction(t){try{return{txid:(await(await this.tronWeb.trx.sendRawTransaction(t))).transaction.txID}}catch(t){throw new h.i({type:d.s,error:new Error(t),instance:this})}}async getFee({contract:t,address:e}){try{if(this.isTRC20Token(t)){var n,s,a;const r=this.getProvider("history"),i=await r.getAccount(this.address),{energyRemaining:c,freeNetRemaining:o}=i.bandwidth,h=!!e&&await r.isFirstTransfer(e),d=Number(this.feeData.defaultTrc20TransferEnergy||13500);let u=(null===(n=this.tokens[t])||void 0===n||null===(s=n.config)||void 0===s||null===(a=s.feeData)||void 0===a?void 0:a.energy)||d;const l=Number(this.feeData.oneEnergyInTrx||28e-5),m=Number(this.feeData.oneBandwidthInTrx||.001);h&&(u+=15e3);const T=u-c,g=345-o;let y=0;T>0&&(y=T*l);let f=0;return g>0&&(f=g*m),this.toMinimalUnit(y+f)}}catch(t){console.error(t)}return new this.BN(this.feeData.fee)}getTRC20Fee(t){const e=this.transactions.find(e=>e.txid===t.transaction_id);return(null==e?void 0:e.fee)||null}async getTransactions(){const{transactions:t=[],transfers:e=[]}=await this.getProvider("history").getTransactions({address:this.address}).catch(t=>(console.error(t),{})),{trc20transfers:n=[]}=await this.getProvider("trc20History").getTransactions({address:this.address}).catch(t=>(console.error(t),{})),s=e.map(t=>{const e=this.tokens[t.tokenName];return e&&this.getProvider("history").modifyTokenTransactionResponse(t,this.address,e.ticker,e.decimal)}).filter(Boolean);return t.concat(s).concat(n)}async getTransaction(t){return this.getProvider("tx").getTransaction(this.address,t)}isTRC20Token(t){var e;return(null===(e=this.tokens[t])||void 0===e?void 0:e.contract.indexOf("100"))<0}async getInfo(){const t=await this.getProvider("balance").getInfo(this.address);return this.getProvider("tokens").getInfo(this.address).then(({assets:t=[]})=>{Object.keys(this.tokens).forEach(e=>{if(!this.isTRC20Token(e))return;const n=t.find(t=>t.tokenId.toLowerCase()===e.toLowerCase());this.tokens[e].balance=n&&n.balance||0})}).catch(t=>console.warn(`[${this.ticker}] Tronscan Error: failed to fetch trc20 tokens,`,t)),this.getProvider("validators").getInfo(this.address).then(({votes:t=null})=>{if(t&&0!==t.length&&this.balances.staking){const e={};t.forEach(({vote_address:t,vote_count:n})=>{e[t]={address:t,shares:n}}),this.balances.staking.validators=e}}),this.balance=this.toMinimalUnit(t.balances.total),t&&t.assetV2&&t.assetV2.forEach(t=>{this.tokens[t.key]&&(this.tokens[t.key].balance=t.value)}),t&&t.balances&&Object.keys(t.balances).forEach(e=>{this.balances[e]=t.balances[e]}),{balance:this.balance,balances:this.balances}}setPrivateKey(t){super.setPrivateKey(t),this.tronWeb||(this.tronWeb=new i.a({fullHost:this.getProvider("node").config.baseUrl,privateKey:t}))}createDelegationTransaction(t,e){return new Promise((n,s)=>{const a=this.toCurrencyUnit(e);let r=null;const i=this.balances.frozen,c=()=>new Promise((t,e)=>{Number(this.balances.frozen)>Number(i)?t():this.getInfo().then(n=>{Number(n.balances.frozen)>Number(i)?t():e()}).catch(t=>{e(t)})}),o=()=>new Promise((e,n)=>{const{votesTotal:s,staking:{total:r}}=this.balances,i=Number(r)>0?s:a;this.createVoteTransaction(t,i).then(t=>{e(t)}).catch(t=>n(t))}),h=()=>{c().then(()=>{clearTimeout(r),o().then(t=>n(t)).catch(t=>s(t))}).catch(()=>{r=setTimeout(h,5e3)})};this.createFreezeTransaction(e).then(()=>h()).catch(t=>s(t))})}async createFreezeTransaction(t){const e=[];try{const e=await this.tronWeb.transactionBuilder.freezeBalance(t,3,"BANDWIDTH",this.address),n=await this.tronWeb.trx.sign(e,this.privateKey);return await this.sendRawTransaction(n)}catch(t){e.push(t)}throw new h.i({type:d.s,error:new Error(e),instance:this})}async createVoteTransaction(t,e){const n=[];try{const n=await this.tronWeb.transactionBuilder.vote({[t]:e},this.address);return await this.tronWeb.trx.sign(n,this.privateKey)}catch(t){n.push(t)}throw new h.i({type:d.s,error:new Error(n),instance:this})}async createUnfreezeTransaction(){const t=[];try{const t=await this.tronWeb.transactionBuilder.unfreezeBalance("BANDWIDTH",this.address),e=await this.tronWeb.trx.sign(t,this.privateKey);return{txid:(await this.tronWeb.trx.sendRawTransaction(e)).transaction.txID}}catch(e){t.push(e)}throw new h.i({type:d.s,error:new Error(t),instance:this})}async createWithdrawRewardTransaction(){const t=await this.tronWeb.transactionBuilder.withdrawBlockRewards(this.address);return await this.tronWeb.trx.sign(t,this.privateKey)}}e.default=TRXCoin},4428:function(t,e,n){"use strict";n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return o})),n.d(e,"g",(function(){return h})),n.d(e,"a",(function(){return d})),n.d(e,"h",(function(){return u})),n.d(e,"i",(function(){return l})),n.d(e,"e",(function(){return g})),n.d(e,"d",(function(){return y})),n.d(e,"f",(function(){return THETAToken_THETAToken}));var s=n(31),a=n(394),r=n(4),i=n(3);class ETHToken_ETHToken extends a.a{constructor(...t){super(...t),this.gasLimit="150000",this.coefficient=1}async getInfo(){return{balance:String(this.balance),transactions:this.transactions}}async getFee({amount:t=0,isSendAll:e,gasPrice:n,gasLimit:s}){const a=Number(n.toString())*Number(this.coefficient),r=s||this.gasLimit;return new this.BN(r).mul(new this.BN(a))}getFeeSettings(){return s.a.get("eth-gas-price")}async createTransaction({address:t,amount:e,custom:n,userGasPrice:s,gasLimit:a=this.gasLimit,multiplier:r=this.multiplier,nonce:i}){return{address:t,amount:e,custom:n,userGasPrice:s,gasLimit:a,contract:this.contract,multiplier:r,nonce:i}}async sendTransaction(t){return new Promise((e,n)=>{this.web3.eth.sendSignedTransaction(t).on("transactionHash",t=>{e({txid:t})}).catch(t=>{const e=this.parent.coreLibrary.currentProvider.host,s=new r.d({type:i.s,error:t,url:e,instance:this});n(s)})})}}var c=ETHToken_ETHToken;class BSCToken_BSCToken extends a.a{constructor(...t){super(...t),this.gasLimit="150000",this.coefficient=1}async getInfo(){return{balance:String(this.balance),transactions:this.transactions}}async getFee({amount:t=0,isSendAll:e,gasPrice:n,gasLimit:s}){const a=Number(n.toString())*Number(this.coefficient),r=s||this.gasLimit;return new this.BN(r).mul(new this.BN(a))}async createTransaction({address:t,amount:e,custom:n,userGasPrice:s,gasLimit:a=this.gasLimit,multiplier:r=this.multiplier,nonce:i}){return{address:t,amount:e,custom:n,userGasPrice:s,gasLimit:a,contract:this.contract,multiplier:r,nonce:i}}async sendTransaction(t){return new Promise((e,n)=>{this.web3.eth.sendSignedTransaction(t).on("transactionHash",t=>{e({txid:t})}).catch(t=>{const e=this.parent.coreLibrary.currentProvider.host,s=new r.d({type:i.s,error:t,url:e,instance:this});n(s)})})}}var o=BSCToken_BSCToken;class TRXToken_TRXToken extends a.a{async createTransaction({address:t,amount:e}){return{address:t,amount:e,contract:this.contract,transfer:!0,feeLimit:1e7}}getUserTicker(){return-1!==this.ticker.indexOf("-")&&this.ticker.split("-")[1]||this.ticker}}var h=TRXToken_TRXToken;class BNBToken_BNBToken extends a.a{constructor(...t){super(...t),this.fields.paymentId=!0,this.balances={}}async availableBalance(){return this.balances&&this.balances.available?this.balances.available:this.divisibleBalance?String(this.divisibleBalance):"0"}async getInfo(){return await this.getBalance(),{balance:String(this.balance),transactions:this.transactions}}async createTransaction({address:t,amount:e,memo:n}){return{address:t,amount:e,memo:n,asset:this.ticker}}async getBalance(){return this.balance}async getTransactions(){return this.transactions}getUserTicker(){return this.ticker.split("-")[0]}}var d=BNBToken_BNBToken;class VETToken_VETToken extends a.a{constructor(...t){super(...t),this.fee="60"}get feeTicker(){return"VTHO"}async getInfo(){return{balance:String(this.balance),transactions:this.transactions}}async getFee(){return new this.BN(this.toMinimalUnit(this.fee))}async createTransaction({address:t,amount:e}){const n=Number(this.toCurrencyUnit(await this.getFee())),s=`0xa9059cbb${this.addLeadingZero(t.substring(2),64)}${this.addLeadingZero(new this.BN(e).toString(16),64)}`;return{contract:this.contract,amount:"0",dataToSend:s,fee:n}}async isAvailableForFee(){const t=await this.getFee();return this.indivisibleBalance.gte(t)}async availableBalance(){const t=await this.getFee(),e=new this.BN(this.balance).sub(t);return e.lt(new this.BN(0))?"0":this.toCurrencyUnit(e)}addLeadingZero(t,e){return String(t).padStart(e,"0")}}var u=VETToken_VETToken;class ZILToken_ZILToken extends a.a{async createTransaction({address:t,amount:e}){return{address:t,amount:e,contract:this.contract}}}var l=ZILToken_ZILToken,m=n(16),T=n.n(m);class MATICToken_MATICToken extends a.a{constructor(...t){super(...t),this.gasLimit="150000",this.coefficient=1,this.BN=T.a}async getInfo(){return{balance:String(this.balance),transactions:this.transactions}}async getFee({gasPrice:t,gasLimit:e}){const n=new this.BN(t.toString()).mul(new this.BN(this.coefficient)),s=e||this.gasLimit;return new this.BN(s).mul(new this.BN(n))}async createTransaction({address:t,amount:e,custom:n,userGasPrice:s,gasLimit:a=this.gasLimit,multiplier:r=this.multiplier,nonce:i}){return{address:t,amount:e,custom:n,userGasPrice:s,gasLimit:a,contract:this.contract,multiplier:r,nonce:i}}async sendTransaction(t){return new Promise((e,n)=>{this.web3.eth.sendSignedTransaction(t).on("transactionHash",t=>{e({txid:t})}).catch(t=>{const e=this.parent.coreLibrary.currentProvider.host;n(new r.d({type:i.s,error:t,url:e,instance:this}))})})}}var g=MATICToken_MATICToken;class LUNCToken_LUNCToken extends a.a{constructor(...t){super(...t),this.denom=t[9],this.fields.paymentId=!0}async createTransaction({address:t,amount:e,userGasPrice:n,gasLimit:s,multiplier:a,feeLimit:r=1e7,memo:i}){return{address:t,amount:e,contract:this.contract,transfer:!0,ticker:this.ticker,userGasPrice:n,gasLimit:s,multiplier:a,feeLimit:r,denom:this.denom,memo:i}}}var y=LUNCToken_LUNCToken;class THETAToken_THETAToken extends a.a{constructor(...t){super(...t),this.id=this.ticker,this.network=this.config.network}async createTransaction({address:t,amount:e,userFee:n}){return{address:t,amount:e,contract:this.contract,ticker:this.ticker,userFee:n||await this.getFee()}}getFeeTicker(){return this.config.feeTicker}async availableBalance(t){if(!this.balance)return"0";const e=new T.a(this.balance).sub(new T.a(t));return e.gte(new T.a(0))?this.toCurrencyUnit(e):"0"}async isAvailableForSend(t,e){const n=await this.availableBalance(this.toMinimalUnit(e));return new T.a(this.toMinimalUnit(t)).lte(new T.a(this.toMinimalUnit(n)))}async getFee(){const t=this.config.defaultFee;if(!t)throw new Error(this.ticker+" provide defaultFee in config");return new this.BN(t)}}}}]);