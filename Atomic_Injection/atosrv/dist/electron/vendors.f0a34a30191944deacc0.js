(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{355:function(e,t,r){"use strict";r.r(t),r.d(t,"Account",(function(){return Account})),r.d(t,"AddressLookupTableAccount",(function(){return AddressLookupTableAccount})),r.d(t,"AddressLookupTableInstruction",(function(){return AddressLookupTableInstruction})),r.d(t,"AddressLookupTableProgram",(function(){return AddressLookupTableProgram})),r.d(t,"Authorized",(function(){return Authorized})),r.d(t,"BLOCKHASH_CACHE_TIMEOUT_MS",(function(){return je})),r.d(t,"BPF_LOADER_DEPRECATED_PROGRAM_ID",(function(){return B})),r.d(t,"BPF_LOADER_PROGRAM_ID",(function(){return de})),r.d(t,"BpfLoader",(function(){return BpfLoader})),r.d(t,"COMPUTE_BUDGET_INSTRUCTION_LAYOUTS",(function(){return Qt})),r.d(t,"ComputeBudgetInstruction",(function(){return ComputeBudgetInstruction})),r.d(t,"ComputeBudgetProgram",(function(){return ComputeBudgetProgram})),r.d(t,"Connection",(function(){return Connection})),r.d(t,"Ed25519Program",(function(){return Ed25519Program})),r.d(t,"Enum",(function(){return Enum})),r.d(t,"EpochSchedule",(function(){return EpochSchedule})),r.d(t,"FeeCalculatorLayout",(function(){return se})),r.d(t,"Keypair",(function(){return Keypair})),r.d(t,"LAMPORTS_PER_SOL",(function(){return fr})),r.d(t,"LOOKUP_TABLE_INSTRUCTION_LAYOUTS",(function(){return Zt})),r.d(t,"Loader",(function(){return Loader})),r.d(t,"Lockup",(function(){return Lockup})),r.d(t,"MAX_SEED_LENGTH",(function(){return v})),r.d(t,"Message",(function(){return Message})),r.d(t,"MessageV0",(function(){return MessageV0})),r.d(t,"NONCE_ACCOUNT_LENGTH",(function(){return oe})),r.d(t,"NonceAccount",(function(){return NonceAccount})),r.d(t,"PACKET_DATA_SIZE",(function(){return C})),r.d(t,"PUBLIC_KEY_LENGTH",(function(){return R})),r.d(t,"PublicKey",(function(){return PublicKey})),r.d(t,"SIGNATURE_LENGTH_IN_BYTES",(function(){return x})),r.d(t,"SOLANA_SCHEMA",(function(){return T})),r.d(t,"STAKE_CONFIG_ID",(function(){return nr})),r.d(t,"STAKE_INSTRUCTION_LAYOUTS",(function(){return sr})),r.d(t,"SYSTEM_INSTRUCTION_LAYOUTS",(function(){return ue})),r.d(t,"SYSVAR_CLOCK_PUBKEY",(function(){return H})),r.d(t,"SYSVAR_EPOCH_SCHEDULE_PUBKEY",(function(){return D})),r.d(t,"SYSVAR_INSTRUCTIONS_PUBKEY",(function(){return F})),r.d(t,"SYSVAR_RECENT_BLOCKHASHES_PUBKEY",(function(){return $})),r.d(t,"SYSVAR_RENT_PUBKEY",(function(){return Y})),r.d(t,"SYSVAR_REWARDS_PUBKEY",(function(){return G})),r.d(t,"SYSVAR_SLOT_HASHES_PUBKEY",(function(){return X})),r.d(t,"SYSVAR_SLOT_HISTORY_PUBKEY",(function(){return Z})),r.d(t,"SYSVAR_STAKE_HISTORY_PUBKEY",(function(){return Q})),r.d(t,"Secp256k1Program",(function(){return Secp256k1Program})),r.d(t,"SendTransactionError",(function(){return SendTransactionError})),r.d(t,"SolanaJSONRPCError",(function(){return SolanaJSONRPCError})),r.d(t,"SolanaJSONRPCErrorCode",(function(){return ye})),r.d(t,"StakeAuthorizationLayout",(function(){return ir})),r.d(t,"StakeInstruction",(function(){return StakeInstruction})),r.d(t,"StakeProgram",(function(){return StakeProgram})),r.d(t,"Struct",(function(){return Struct})),r.d(t,"SystemInstruction",(function(){return SystemInstruction})),r.d(t,"SystemProgram",(function(){return SystemProgram})),r.d(t,"Transaction",(function(){return Transaction})),r.d(t,"TransactionExpiredBlockheightExceededError",(function(){return TransactionExpiredBlockheightExceededError})),r.d(t,"TransactionExpiredTimeoutError",(function(){return TransactionExpiredTimeoutError})),r.d(t,"TransactionInstruction",(function(){return TransactionInstruction})),r.d(t,"TransactionStatus",(function(){return J})),r.d(t,"VALIDATOR_INFO_KEY",(function(){return cr})),r.d(t,"VERSION_PREFIX_MASK",(function(){return K})),r.d(t,"VOTE_PROGRAM_ID",(function(){return lr})),r.d(t,"ValidatorInfo",(function(){return ValidatorInfo})),r.d(t,"VersionedMessage",(function(){return U})),r.d(t,"VersionedTransaction",(function(){return VersionedTransaction})),r.d(t,"VoteAccount",(function(){return VoteAccount})),r.d(t,"VoteAuthorizationLayout",(function(){return ar})),r.d(t,"VoteInit",(function(){return VoteInit})),r.d(t,"VoteInstruction",(function(){return VoteInstruction})),r.d(t,"VoteProgram",(function(){return VoteProgram})),r.d(t,"clusterApiUrl",(function(){return yr})),r.d(t,"sendAndConfirmRawTransaction",(function(){return mr})),r.d(t,"sendAndConfirmTransaction",(function(){return ee}));var n=r(6),s=r(605),i=r(220),o=r(465),a=r.n(o),c=r(42),u=r.n(c),l=r(379),d=r(466),b=r(2),h=r(378),p=r(0),g=r(875),y=r(464),m=r.n(y),f=r(176),k=r.n(f),O=r(876),S=r(390);i.utils.sha512Sync=(...e)=>Object(s.sha512)(i.utils.concatBytes(...e));const w=i.utils.randomPrivateKey,j=()=>{const e=i.utils.randomPrivateKey(),t=I(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},I=i.sync.getPublicKey;function P(e){try{return i.Point.fromHex(e,!0),!0}catch{return!1}}const _=(e,t)=>i.sync.sign(e,t.slice(0,32)),A=i.sync.verify,E=e=>n.Buffer.isBuffer(e)?e:e instanceof Uint8Array?n.Buffer.from(e.buffer,e.byteOffset,e.byteLength):n.Buffer.from(e);class Struct{constructor(e){Object.assign(this,e)}encode(){return n.Buffer.from(Object(d.serialize)(T,this))}static decode(e){return Object(d.deserialize)(T,this,e)}static decodeUnchecked(e){return Object(d.deserializeUnchecked)(T,this,e)}}class Enum extends Struct{constructor(e){if(super(e),this.enum="",1!==Object.keys(e).length)throw new Error("Enum can only take single value");Object.keys(e).map(e=>{this.enum=e})}}const T=new Map,v=32,R=32;class PublicKey extends Struct{constructor(e){if(super({}),this._bn=void 0,function(e){return void 0!==e._bn}(e))this._bn=e._bn;else{if("string"==typeof e){const t=u.a.decode(e);if(t.length!=R)throw new Error("Invalid public key input");this._bn=new a.a(t)}else this._bn=new a.a(e);if(this._bn.byteLength()>32)throw new Error("Invalid public key input")}}equals(e){return this._bn.eq(e._bn)}toBase58(){return u.a.encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){return this.toBuffer()}toBuffer(){const e=this._bn.toArrayLike(n.Buffer);if(e.length===R)return e;const t=n.Buffer.alloc(32);return e.copy(t,32-e.length),t}toString(){return this.toBase58()}static async createWithSeed(e,t,r){const s=n.Buffer.concat([e.toBuffer(),n.Buffer.from(t),r.toBuffer()]),i=Object(l.sha256)(s);return new PublicKey(i)}static createProgramAddressSync(e,t){let r=n.Buffer.alloc(0);e.forEach((function(e){if(e.length>v)throw new TypeError("Max seed length exceeded");r=n.Buffer.concat([r,E(e)])})),r=n.Buffer.concat([r,t.toBuffer(),n.Buffer.from("ProgramDerivedAddress")]);const s=Object(l.sha256)(r);if(P(s))throw new Error("Invalid seeds, address must fall off the curve");return new PublicKey(s)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,s=255;for(;0!=s;){try{const i=e.concat(n.Buffer.from([s]));r=this.createProgramAddressSync(i,t)}catch(e){if(e instanceof TypeError)throw e;s--;continue}return[r,s]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return P(new PublicKey(e).toBytes())}}PublicKey.default=new PublicKey("11111111111111111111111111111111"),T.set(PublicKey,{kind:"struct",fields:[["_bn","u256"]]});class Account{constructor(e){if(this._publicKey=void 0,this._secretKey=void 0,e){const t=E(e);if(64!==e.length)throw new Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=E(w()),this._publicKey=E(I(this._secretKey))}get publicKey(){return new PublicKey(this._publicKey)}get secretKey(){return n.Buffer.concat([this._secretKey,this._publicKey],64)}}const B=new PublicKey("BPFLoader1111111111111111111111111111111111"),C=1232,K=127,x=64;class TransactionExpiredBlockheightExceededError extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(TransactionExpiredBlockheightExceededError.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class TransactionExpiredTimeoutError extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature `+e+" using the Solana Explorer or CLI tools."),this.signature=void 0,this.signature=e}}Object.defineProperty(TransactionExpiredTimeoutError.prototype,"name",{value:"TransactionExpiredTimeoutError"});const L=(e="publicKey")=>b.blob(32,e),N=(e="signature")=>b.blob(64,e),z=(e="string")=>{const t=b.struct([b.u32("length"),b.u32("lengthPadding"),b.blob(b.offset(b.u32(),-8),"chars")],e),r=t.decode.bind(t),s=t.encode.bind(t),i=t;return i.decode=(e,t)=>r(e,t).chars.toString(),i.encode=(e,t,r)=>{const i={chars:n.Buffer.from(e,"utf8")};return s(i,t,r)},i.alloc=e=>b.u32().span+b.u32().span+n.Buffer.from(e,"utf8").length,i};function W(e){let t=0,r=0;for(;;){let n=e.shift();if(t|=(127&n)<<7*r,r+=1,0==(128&n))break}return t}function q(e,t){let r=t;for(;;){let t=127&r;if(r>>=7,0==r){e.push(t);break}t|=128,e.push(t)}}class Message{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map(e=>new PublicKey(e)),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach(e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex]))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:u.a.decode(e.data)}))}get addressTableLookups(){return[]}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){return e<this.header.numRequiredSignatures-this.header.numReadonlySignedAccounts||e>=this.header.numRequiredSignatures&&e<this.accountKeys.length-this.header.numReadonlyUnsignedAccounts}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter((e,t)=>!this.isProgramId(t))}serialize(){const e=this.accountKeys.length;let t=[];q(t,e);const r=this.instructions.map(e=>{const{accounts:t,programIdIndex:r}=e,s=Array.from(u.a.decode(e.data));let i=[];q(i,t.length);let o=[];return q(o,s.length),{programIdIndex:r,keyIndicesCount:n.Buffer.from(i),keyIndices:t,dataLength:n.Buffer.from(o),data:s}});let s=[];q(s,r.length);let i=n.Buffer.alloc(C);n.Buffer.from(s).copy(i);let o=s.length;r.forEach(e=>{const t=b.struct([b.u8("programIdIndex"),b.blob(e.keyIndicesCount.length,"keyIndicesCount"),b.seq(b.u8("keyIndex"),e.keyIndices.length,"keyIndices"),b.blob(e.dataLength.length,"dataLength"),b.seq(b.u8("userdatum"),e.data.length,"data")]).encode(e,i,o);o+=t}),i=i.slice(0,o);const a=b.struct([b.blob(1,"numRequiredSignatures"),b.blob(1,"numReadonlySignedAccounts"),b.blob(1,"numReadonlyUnsignedAccounts"),b.blob(t.length,"keyCount"),b.seq(L("key"),e,"keys"),L("recentBlockhash")]),c={numRequiredSignatures:n.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:n.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:n.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:n.Buffer.from(t),keys:this.accountKeys.map(e=>E(e.toBytes())),recentBlockhash:u.a.decode(this.recentBlockhash)};let l=n.Buffer.alloc(2048);const d=a.encode(c,l);return i.copy(l,d),l.slice(0,d+i.length)}static from(e){let t=[...e];const r=t.shift();if(r!==(r&K))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const s=t.shift(),i=t.shift(),o=W(t);let a=[];for(let e=0;e<o;e++){const e=t.slice(0,R);t=t.slice(R),a.push(u.a.encode(n.Buffer.from(e)))}const c=t.slice(0,R);t=t.slice(R);const l=W(t);let d=[];for(let e=0;e<l;e++){const e=t.shift(),r=W(t),s=t.slice(0,r);t=t.slice(r);const i=W(t),o=t.slice(0,i),a=u.a.encode(n.Buffer.from(o));t=t.slice(i),d.push({programIdIndex:e,accounts:s,data:a})}const b={header:{numRequiredSignatures:r,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:i},recentBlockhash:u.a.encode(n.Buffer.from(c)),accountKeys:a,instructions:d};return new Message(b)}}function V(e,t){if(!e)throw new Error(t||"Assertion failed")}class MessageV0{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}serialize(){const e=Array();q(e,this.staticAccountKeys.length);const t=this.serializeInstructions(),r=Array();q(r,this.compiledInstructions.length);const n=this.serializeAddressTableLookups(),s=Array();q(s,this.addressTableLookups.length);const i=b.struct([b.u8("prefix"),b.struct([b.u8("numRequiredSignatures"),b.u8("numReadonlySignedAccounts"),b.u8("numReadonlyUnsignedAccounts")],"header"),b.blob(e.length,"staticAccountKeysLength"),b.seq(L(),this.staticAccountKeys.length,"staticAccountKeys"),L("recentBlockhash"),b.blob(r.length,"instructionsLength"),b.blob(t.length,"serializedInstructions"),b.blob(s.length,"addressTableLookupsLength"),b.blob(n.length,"serializedAddressTableLookups")]),o=new Uint8Array(C),a=i.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map(e=>e.toBytes()),recentBlockhash:u.a.decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(s),serializedAddressTableLookups:n},o);return o.slice(0,a)}serializeInstructions(){let e=0;const t=new Uint8Array(C);for(const r of this.compiledInstructions){const n=Array();q(n,r.accountKeyIndexes.length);const s=Array();q(s,r.data.length);e+=b.struct([b.u8("programIdIndex"),b.blob(n.length,"encodedAccountKeyIndexesLength"),b.seq(b.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),b.blob(s.length,"encodedDataLength"),b.blob(r.data.length,"data")]).encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(n),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(s),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0;const t=new Uint8Array(C);for(const r of this.addressTableLookups){const n=Array();q(n,r.writableIndexes.length);const s=Array();q(s,r.readonlyIndexes.length);e+=b.struct([L("accountKey"),b.blob(n.length,"encodedWritableIndexesLength"),b.seq(b.u8(),r.writableIndexes.length,"writableIndexes"),b.blob(s.length,"encodedReadonlyIndexesLength"),b.seq(b.u8(),r.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(n),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(s),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e];const r=t.shift(),n=r&K;V(r!==n,"Expected versioned message but received legacy message");V(0===n,"Expected versioned message with version 0 but found version "+n);const s={numRequiredSignatures:t.shift(),numReadonlySignedAccounts:t.shift(),numReadonlyUnsignedAccounts:t.shift()},i=[],o=W(t);for(let e=0;e<o;e++)i.push(new PublicKey(t.splice(0,R)));const a=u.a.encode(t.splice(0,R)),c=W(t),l=[];for(let e=0;e<c;e++){const e=t.shift(),r=W(t),n=t.splice(0,r),s=W(t),i=new Uint8Array(t.splice(0,s));l.push({programIdIndex:e,accountKeyIndexes:n,data:i})}const d=W(t),b=[];for(let e=0;e<d;e++){const e=new PublicKey(t.splice(0,R)),r=W(t),n=t.splice(0,r),s=W(t),i=t.splice(0,s);b.push({accountKey:e,writableIndexes:n,readonlyIndexes:i})}return new MessageV0({header:s,staticAccountKeys:i,recentBlockhash:a,compiledInstructions:l,addressTableLookups:b})}}const U={deserializeMessageVersion(e){const t=e[0],r=t&K;return r===t?"legacy":r},deserialize:e=>{const t=U.deserializeMessageVersion(e);if("legacy"===t)return Message.from(e);if(0===t)return MessageV0.deserialize(e);throw new Error(`Transaction message version ${t} deserialization is not supported`)}};let J;!function(e){e[e.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",e[e.PROCESSED=1]="PROCESSED",e[e.TIMED_OUT=2]="TIMED_OUT"}(J||(J={}));const M=n.Buffer.alloc(x).fill(0);class TransactionInstruction{constructor(e){this.keys=void 0,this.programId=void 0,this.data=n.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map(({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r})),programId:this.programId.toJSON(),data:[...this.data]}}}class Transaction{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this._message=void 0,this._json=void 0,e)if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{const{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map(e=>e.toJSON()),signers:this.signatures.map(({publicKey:e})=>e.toJSON())}}add(...e){if(0===e.length)throw new Error("No instructions");return e.forEach(e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new TransactionInstruction(e))}),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let e,t,r;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw new Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let e=0;e<t.length;e++)if(void 0===t[e].programId)throw new Error(`Transaction instruction index ${e} has undefined program id`);const n=[],s=[];t.forEach(e=>{e.keys.forEach(e=>{s.push({...e})});const t=e.programId.toString();n.includes(t)||n.push(t)}),n.forEach(e=>{s.push({pubkey:new PublicKey(e),isSigner:!1,isWritable:!1})});const i=[];s.forEach(e=>{const t=e.pubkey.toString(),r=i.findIndex(e=>e.pubkey.toString()===t);r>-1?(i[r].isWritable=i[r].isWritable||e.isWritable,i[r].isSigner=i[r].isSigner||e.isSigner):i.push(e)}),i.sort((function(e,t){return e.isSigner!==t.isSigner?e.isSigner?-1:1:e.isWritable!==t.isWritable?e.isWritable?-1:1:e.pubkey.toBase58().localeCompare(t.pubkey.toBase58())}));const o=i.findIndex(e=>e.pubkey.equals(r));if(o>-1){const[e]=i.splice(o,1);e.isSigner=!0,e.isWritable=!0,i.unshift(e)}else i.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const e of this.signatures){const t=i.findIndex(t=>t.pubkey.equals(e.publicKey));if(!(t>-1))throw new Error("unknown signer: "+e.publicKey.toString());i[t].isSigner||(i[t].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let a=0,c=0,l=0;const d=[],b=[];i.forEach(({pubkey:e,isSigner:t,isWritable:r})=>{t?(d.push(e.toString()),a+=1,r||(c+=1)):(b.push(e.toString()),r||(l+=1))});const h=d.concat(b),p=t.map(e=>{const{data:t,programId:r}=e;return{programIdIndex:h.indexOf(r.toString()),accounts:e.keys.map(e=>h.indexOf(e.pubkey.toString())),data:u.a.encode(t)}});return p.forEach(e=>{V(e.programIdIndex>=0),e.accounts.forEach(e=>V(e>=0))}),new Message({header:{numRequiredSignatures:a,numReadonlySignedAccounts:c,numReadonlyUnsignedAccounts:l},accountKeys:h,recentBlockhash:e,instructions:p})}_compile(){const e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);if(this.signatures.length===t.length){if(this.signatures.every((e,r)=>t[r].equals(e.publicKey)))return e}return this.signatures=t.map(e=>({signature:null,publicKey:e})),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw new Error("No signers");const t=new Set;this.signatures=e.filter(e=>{const r=e.toString();return!t.has(r)&&(t.add(r),!0)}).map(e=>({signature:null,publicKey:e}))}sign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const n of e){const e=n.publicKey.toString();t.has(e)||(t.add(e),r.push(n))}this.signatures=r.map(e=>({signature:null,publicKey:e.publicKey}));const n=this._compile();this._partialSign(n,...r)}partialSign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const n of e){const e=n.publicKey.toString();t.has(e)||(t.add(e),r.push(n))}const n=this._compile();this._partialSign(n,...r)}_partialSign(e,...t){const r=e.serialize();t.forEach(e=>{const t=_(r,e.secretKey);this._addSignature(e.publicKey,E(t))})}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){V(64===t.length);const r=this.signatures.findIndex(t=>e.equals(t.publicKey));if(r<0)throw new Error("unknown signer: "+e.toString());this.signatures[r].signature=n.Buffer.from(t)}verifySignatures(){return this._verifySignatures(this.serializeMessage(),!0)}_verifySignatures(e,t){for(const{signature:r,publicKey:n}of this.signatures)if(null===r){if(t)return!1}else if(!A(r,e,n.toBuffer()))return!1;return!0}serialize(e){const{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),n=this.serializeMessage();if(r&&!this._verifySignatures(n,t))throw new Error("Signature verification failed");return this._serialize(n)}_serialize(e){const{signatures:t}=this,r=[];q(r,t.length);const s=r.length+64*t.length+e.length,i=n.Buffer.alloc(s);return V(t.length<256),n.Buffer.from(r).copy(i,0),t.forEach(({signature:e},t)=>{null!==e&&(V(64===e.length,"signature has invalid length"),n.Buffer.from(e).copy(i,r.length+64*t))}),e.copy(i,r.length+64*t.length),V(i.length<=C,`Transaction too large: ${i.length} > ${C}`),i}get keys(){return V(1===this.instructions.length),this.instructions[0].keys.map(e=>e.pubkey)}get programId(){return V(1===this.instructions.length),this.instructions[0].programId}get data(){return V(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e];const r=W(t);let s=[];for(let e=0;e<r;e++){const e=t.slice(0,x);t=t.slice(x),s.push(u.a.encode(n.Buffer.from(e)))}return Transaction.populate(Message.from(t),s)}static populate(e,t=[]){const r=new Transaction;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach((t,n)=>{const s={signature:t==u.a.encode(M)?null:u.a.decode(t),publicKey:e.accountKeys[n]};r.signatures.push(s)}),e.instructions.forEach(t=>{const n=t.accounts.map(t=>{const n=e.accountKeys[t];return{pubkey:n,isSigner:r.signatures.some(e=>e.publicKey.toString()===n.toString())||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}});r.instructions.push(new TransactionInstruction({keys:n,programId:e.accountKeys[t.programIdIndex],data:u.a.decode(t.data)}))}),r._message=e,r._json=r.toJSON(),r}}class VersionedTransaction{constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)V(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(x));this.signatures=t}this.message=e}serialize(){const e=this.message.serialize(),t=Array();q(t,this.signatures.length);const r=b.struct([b.blob(t.length,"encodedSignaturesLength"),b.seq(N(),this.signatures.length,"signatures"),b.blob(e.length,"serializedMessage")]),n=new Uint8Array(2048),s=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},n);return n.slice(0,s)}static deserialize(e){let t=[...e];const r=[],n=W(t);for(let e=0;e<n;e++)r.push(new Uint8Array(t.splice(0,x)));const s=U.deserialize(new Uint8Array(t));return new VersionedTransaction(s,r)}sign(e){const t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const n of e){const e=r.findIndex(e=>e.equals(n.publicKey));V(e>=0,"Cannot sign with non signer key "+n.publicKey.toBase58()),this.signatures[e]=_(t,n.secretKey)}}}const H=new PublicKey("SysvarC1ock11111111111111111111111111111111"),D=new PublicKey("SysvarEpochSchedu1e111111111111111111111111"),F=new PublicKey("Sysvar1nstructions1111111111111111111111111"),$=new PublicKey("SysvarRecentB1ockHashes11111111111111111111"),Y=new PublicKey("SysvarRent111111111111111111111111111111111"),G=new PublicKey("SysvarRewards111111111111111111111111111111"),X=new PublicKey("SysvarS1otHashes111111111111111111111111111"),Z=new PublicKey("SysvarS1otHistory11111111111111111111111111"),Q=new PublicKey("SysvarStakeHistory1111111111111111111111111");async function ee(e,t,r,n){const s=n&&{skipPreflight:n.skipPreflight,preflightCommitment:n.preflightCommitment||n.commitment,maxRetries:n.maxRetries,minContextSlot:n.minContextSlot},i=await e.sendTransaction(t,r,s),o=null!=t.recentBlockhash&&null!=t.lastValidBlockHeight?(await e.confirmTransaction({signature:i,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},n&&n.commitment)).value:(await e.confirmTransaction(i,n&&n.commitment)).value;if(o.err)throw new Error(`Transaction ${i} failed (${JSON.stringify(o)})`);return i}function te(e){return new Promise(t=>setTimeout(t,e))}function re(e,t){const r=e.layout.span>=0?e.layout.span:function(e,t){const r=e=>{if(e.span>=0)return e.span;if("function"==typeof e.alloc)return e.alloc(t[e.property]);if("count"in e&&"elementLayout"in e){const n=t[e.property];if(Array.isArray(n))return n.length*r(e.elementLayout)}return 0};let n=0;return e.layout.fields.forEach(e=>{n+=r(e)}),n}(e,t),s=n.Buffer.alloc(r),i=Object.assign({instruction:e.index},t);return e.layout.encode(i,s),s}function ne(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.instruction!==e.index)throw new Error(`invalid instruction; instruction index mismatch ${r.instruction} != ${e.index}`);return r}const se=b.nu64("lamportsPerSignature"),ie=b.struct([b.u32("version"),b.u32("state"),L("authorizedPubkey"),L("nonce"),b.struct([se],"feeCalculator")]),oe=ie.span;class NonceAccount{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){const t=ie.decode(E(e),0);return new NonceAccount({authorizedPubkey:new PublicKey(t.authorizedPubkey),nonce:new PublicKey(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const ae=(ce=8,e=>{const t=Object(b.blob)(ce,e),{encode:r,decode:s}=(e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}))(t),i=t;return i.decode=(e,t)=>{const r=s(e,t);return Object(h.toBigIntLE)(n.Buffer.from(r))},i.encode=(e,t,n)=>{const s=Object(h.toBufferLE)(e,ce);return r(s,t,n)},i});var ce;class SystemInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=b.u32("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(ue))if(n.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a SystemInstruction");return r}static decodeCreateAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t,space:r,programId:n}=ne(ue.Create,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,lamports:t,space:r,programId:new PublicKey(n)}}static decodeTransfer(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t}=ne(ue.Transfer,e.data);return{fromPubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t,seed:r,programId:n}=ne(ue.TransferWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,basePubkey:e.keys[1].pubkey,toPubkey:e.keys[2].pubkey,lamports:t,seed:r,programId:new PublicKey(n)}}static decodeAllocate(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{space:t}=ne(ue.Allocate,e.data);return{accountPubkey:e.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,space:n,programId:s}=ne(ue.AllocateWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new PublicKey(t),seed:r,space:n,programId:new PublicKey(s)}}static decodeAssign(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{programId:t}=ne(ue.Assign,e.data);return{accountPubkey:e.keys[0].pubkey,programId:new PublicKey(t)}}static decodeAssignWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,programId:n}=ne(ue.AssignWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new PublicKey(t),seed:r,programId:new PublicKey(n)}}static decodeCreateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{base:t,seed:r,lamports:n,space:s,programId:i}=ne(ue.CreateWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,basePubkey:new PublicKey(t),seed:r,lamports:n,space:s,programId:new PublicKey(i)}}static decodeNonceInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{authorized:t}=ne(ue.InitializeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:new PublicKey(t)}}static decodeNonceAdvance(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ne(ue.AdvanceNonceAccount,e.data),{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static decodeNonceWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=ne(ue.WithdrawNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t}=ne(ue.AuthorizeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[1].pubkey,newAuthorizedPubkey:new PublicKey(t)}}static checkProgramId(e){if(!e.equals(SystemProgram.programId))throw new Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const ue=Object.freeze({Create:{index:0,layout:b.struct([b.u32("instruction"),b.ns64("lamports"),b.ns64("space"),L("programId")])},Assign:{index:1,layout:b.struct([b.u32("instruction"),L("programId")])},Transfer:{index:2,layout:b.struct([b.u32("instruction"),ae("lamports")])},CreateWithSeed:{index:3,layout:b.struct([b.u32("instruction"),L("base"),z("seed"),b.ns64("lamports"),b.ns64("space"),L("programId")])},AdvanceNonceAccount:{index:4,layout:b.struct([b.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:b.struct([b.u32("instruction"),b.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:b.struct([b.u32("instruction"),L("authorized")])},AuthorizeNonceAccount:{index:7,layout:b.struct([b.u32("instruction"),L("authorized")])},Allocate:{index:8,layout:b.struct([b.u32("instruction"),b.ns64("space")])},AllocateWithSeed:{index:9,layout:b.struct([b.u32("instruction"),L("base"),z("seed"),b.ns64("space"),L("programId")])},AssignWithSeed:{index:10,layout:b.struct([b.u32("instruction"),L("base"),z("seed"),L("programId")])},TransferWithSeed:{index:11,layout:b.struct([b.u32("instruction"),ae("lamports"),z("seed"),L("programId")])},UpgradeNonceAccount:{index:12,layout:b.struct([b.u32("instruction")])}});class SystemProgram{constructor(){}static createAccount(e){const t=re(ue.Create,{lamports:e.lamports,space:e.space,programId:E(e.programId.toBuffer())});return new TransactionInstruction({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,r;if("basePubkey"in e){t=re(ue.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:E(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}else{t=re(ue.Transfer,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;if("basePubkey"in e){t=re(ue.AssignWithSeed,{base:E(e.basePubkey.toBuffer()),seed:e.seed,programId:E(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=re(ue.Assign,{programId:E(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){const t=re(ue.CreateWithSeed,{base:E(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:E(e.programId.toBuffer())});let r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&r.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new TransactionInstruction({keys:r,programId:this.programId,data:t})}static createNonceAccount(e){const t=new Transaction;"basePubkey"in e&&"seed"in e?t.add(SystemProgram.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:oe,programId:this.programId})):t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:oe,programId:this.programId}));const r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){const t=re(ue.InitializeNonceAccount,{authorized:E(e.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:$,isSigner:!1,isWritable:!1},{pubkey:Y,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new TransactionInstruction(r)}static nonceAdvance(e){const t=re(ue.AdvanceNonceAccount),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:$,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new TransactionInstruction(r)}static nonceWithdraw(e){const t=re(ue.WithdrawNonceAccount,{lamports:e.lamports});return new TransactionInstruction({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:$,isSigner:!1,isWritable:!1},{pubkey:Y,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){const t=re(ue.AuthorizeNonceAccount,{authorized:E(e.newAuthorizedPubkey.toBuffer())});return new TransactionInstruction({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,r;if("basePubkey"in e){t=re(ue.AllocateWithSeed,{base:E(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:E(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=re(ue.Allocate,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}}SystemProgram.programId=new PublicKey("11111111111111111111111111111111");const le=C-300;class Loader{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/Loader.chunkSize)+1+1)}static async load(e,t,r,s,i){{const n=await e.getMinimumBalanceForRentExemption(i.length),o=await e.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==o){if(o.executable)return console.error("Program load failed, account is already executable"),!1;o.data.length!==i.length&&(a=a||new Transaction,a.add(SystemProgram.allocate({accountPubkey:r.publicKey,space:i.length}))),o.owner.equals(s)||(a=a||new Transaction,a.add(SystemProgram.assign({accountPubkey:r.publicKey,programId:s}))),o.lamports<n&&(a=a||new Transaction,a.add(SystemProgram.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:n-o.lamports})))}else a=(new Transaction).add(SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:n>0?n:1,space:i.length,programId:s}));null!==a&&await ee(e,a,[t,r],{commitment:"confirmed"})}const o=b.struct([b.u32("instruction"),b.u32("offset"),b.u32("bytesLength"),b.u32("bytesLengthPadding"),b.seq(b.u8("byte"),b.offset(b.u32(),-8),"bytes")]),a=Loader.chunkSize;let c=0,u=i,l=[];for(;u.length>0;){const i=u.slice(0,a),d=n.Buffer.alloc(a+16);o.encode({instruction:0,offset:c,bytes:i,bytesLength:0,bytesLengthPadding:0},d);const b=(new Transaction).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:s,data:d});if(l.push(ee(e,b,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")){const e=4;await te(1e3/e)}c+=a,u=u.slice(a)}await Promise.all(l);{const i=b.struct([b.u32("instruction")]),o=n.Buffer.alloc(i.span);i.encode({instruction:1},o);const a=(new Transaction).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:Y,isSigner:!1,isWritable:!1}],programId:s,data:o});await ee(e,a,[t,r],{commitment:"confirmed"})}return!0}}Loader.chunkSize=le;const de=new PublicKey("BPFLoader2111111111111111111111111111111111");class BpfLoader{static getMinNumSignatures(e){return Loader.getMinNumSignatures(e)}static load(e,t,r,n,s){return Loader.load(e,t,r,s,n)}}var be=Object.prototype.toString,he=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};var pe=function(e){var t=function e(t,r){var n,s,i,o,a,c,u;if(!0===t)return"true";if(!1===t)return"false";switch(typeof t){case"object":if(null===t)return null;if(t.toJSON&&"function"==typeof t.toJSON)return e(t.toJSON(),r);if("[object Array]"===(u=be.call(t))){for(i="[",s=t.length-1,n=0;n<s;n++)i+=e(t[n],!0)+",";return s>-1&&(i+=e(t[n],!0)),i+"]"}if("[object Object]"===u){for(s=(o=he(t).sort()).length,i="",n=0;n<s;)void 0!==(c=e(t[a=o[n]],!1))&&(i&&(i+=","),i+=JSON.stringify(a)+":"+c),n++;return"{"+i+"}"}return JSON.stringify(t);case"function":case"undefined":return r?null:void 0;case"string":return JSON.stringify(t);default:return isFinite(t)?t:null}}(e,!1);if(void 0!==t)return""+t};function ge(e){let t=0;for(;e>1;)e/=2,t++;return t}class EpochSchedule{constructor(e,t,r,n,s){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=n,this.firstNormalSlot=s}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){const r=ge(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,1+(t|=t>>32)))-ge(32)-1;return[r,e-(this.getSlotsInEpoch(r)-32)]}{const t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+r,t%this.slotsPerEpoch]}var t}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?32*(Math.pow(2,e)-1):(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+ge(32)):this.slotsPerEpoch}}class SendTransactionError extends Error{constructor(e,t){super(e),this.logs=void 0,this.logs=t}}const ye={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class SolanaJSONRPCError extends Error{constructor({code:e,message:t,data:r},n){super(null!=n?`${n}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}}var me=globalThis.fetch;class AddressLookupTableAccount{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){return this.state.deactivationSlot===2n**64n-1n}static deserialize(e){const t=function(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.typeIndex!==e.index)throw new Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(fe,e),r=e.length-56;V(r>=0,"lookup table is invalid"),V(r%32==0,"lookup table is invalid");const n=r/32,{addresses:s}=b.struct([b.seq(L(),n,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new PublicKey(t.authority[0]):void 0,addresses:s.map(e=>new PublicKey(e))}}}const fe={index:1,layout:b.struct([b.u32("typeIndex"),ae("deactivationSlot"),b.nu64("lastExtendedSlot"),b.u8("lastExtendedStartIndex"),b.u8(),b.seq(L(),b.offset(b.u8(),-1),"authority")])},ke=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;const Oe=Object(p.coerce)(Object(p.instance)(PublicKey),Object(p.string)(),e=>new PublicKey(e)),Se=Object(p.tuple)([Object(p.string)(),Object(p.literal)("base64")]),we=Object(p.coerce)(Object(p.instance)(n.Buffer),Se,e=>n.Buffer.from(e[0],"base64")),je=3e4;function Ie(e){let t,r;if("string"==typeof e)t=e;else if(e){const{commitment:n,...s}=e;t=n,r=s}return{commitment:t,config:r}}function Pe(e){return Object(p.union)([Object(p.type)({jsonrpc:Object(p.literal)("2.0"),id:Object(p.string)(),result:e}),Object(p.type)({jsonrpc:Object(p.literal)("2.0"),id:Object(p.string)(),error:Object(p.type)({code:Object(p.unknown)(),message:Object(p.string)(),data:Object(p.optional)(Object(p.any)())})})])}const _e=Pe(Object(p.unknown)());function Ae(e){return Object(p.coerce)(Pe(e),_e,t=>"error"in t?t:{...t,result:Object(p.create)(t.result,e)})}function Ee(e){return Ae(Object(p.type)({context:Object(p.type)({slot:Object(p.number)()}),value:e}))}function Te(e){return Object(p.type)({context:Object(p.type)({slot:Object(p.number)()}),value:e})}function ve(e,t){return 0===e?new MessageV0({header:t.header,staticAccountKeys:t.accountKeys.map(e=>new PublicKey(e)),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:u.a.decode(e.data)})),addressTableLookups:t.addressTableLookups}):new Message(t)}const Re=Object(p.type)({foundation:Object(p.number)(),foundationTerm:Object(p.number)(),initial:Object(p.number)(),taper:Object(p.number)(),terminal:Object(p.number)()}),Be=Ae(Object(p.array)(Object(p.nullable)(Object(p.type)({epoch:Object(p.number)(),effectiveSlot:Object(p.number)(),amount:Object(p.number)(),postBalance:Object(p.number)()})))),Ce=Object(p.type)({epoch:Object(p.number)(),slotIndex:Object(p.number)(),slotsInEpoch:Object(p.number)(),absoluteSlot:Object(p.number)(),blockHeight:Object(p.optional)(Object(p.number)()),transactionCount:Object(p.optional)(Object(p.number)())}),Ke=Object(p.type)({slotsPerEpoch:Object(p.number)(),leaderScheduleSlotOffset:Object(p.number)(),warmup:Object(p.boolean)(),firstNormalEpoch:Object(p.number)(),firstNormalSlot:Object(p.number)()}),xe=Object(p.record)(Object(p.string)(),Object(p.array)(Object(p.number)())),Le=Object(p.nullable)(Object(p.union)([Object(p.type)({}),Object(p.string)()])),Ne=Object(p.type)({err:Le}),ze=Object(p.literal)("receivedSignature"),We=Object(p.type)({"solana-core":Object(p.string)(),"feature-set":Object(p.optional)(Object(p.number)())}),qe=Ee(Object(p.type)({err:Object(p.nullable)(Object(p.union)([Object(p.type)({}),Object(p.string)()])),logs:Object(p.nullable)(Object(p.array)(Object(p.string)())),accounts:Object(p.optional)(Object(p.nullable)(Object(p.array)(Object(p.nullable)(Object(p.type)({executable:Object(p.boolean)(),owner:Object(p.string)(),lamports:Object(p.number)(),data:Object(p.array)(Object(p.string)()),rentEpoch:Object(p.optional)(Object(p.number)())}))))),unitsConsumed:Object(p.optional)(Object(p.number)()),returnData:Object(p.optional)(Object(p.nullable)(Object(p.type)({programId:Object(p.string)(),data:Object(p.tuple)([Object(p.string)(),Object(p.literal)("base64")])})))})),Ve=Ee(Object(p.type)({byIdentity:Object(p.record)(Object(p.string)(),Object(p.array)(Object(p.number)())),range:Object(p.type)({firstSlot:Object(p.number)(),lastSlot:Object(p.number)()})}));const Ue=Ae(Re),Je=Ae(Ce),Me=Ae(Ke),He=Ae(xe),De=Ae(Object(p.number)()),Fe=Ee(Object(p.type)({total:Object(p.number)(),circulating:Object(p.number)(),nonCirculating:Object(p.number)(),nonCirculatingAccounts:Object(p.array)(Oe)})),$e=Object(p.type)({amount:Object(p.string)(),uiAmount:Object(p.nullable)(Object(p.number)()),decimals:Object(p.number)(),uiAmountString:Object(p.optional)(Object(p.string)())}),Ye=Ee(Object(p.array)(Object(p.type)({address:Oe,amount:Object(p.string)(),uiAmount:Object(p.nullable)(Object(p.number)()),decimals:Object(p.number)(),uiAmountString:Object(p.optional)(Object(p.string)())}))),Ge=Ee(Object(p.array)(Object(p.type)({pubkey:Oe,account:Object(p.type)({executable:Object(p.boolean)(),owner:Oe,lamports:Object(p.number)(),data:we,rentEpoch:Object(p.number)()})}))),Xe=Object(p.type)({program:Object(p.string)(),parsed:Object(p.unknown)(),space:Object(p.number)()}),Ze=Ee(Object(p.array)(Object(p.type)({pubkey:Oe,account:Object(p.type)({executable:Object(p.boolean)(),owner:Oe,lamports:Object(p.number)(),data:Xe,rentEpoch:Object(p.number)()})}))),Qe=Ee(Object(p.array)(Object(p.type)({lamports:Object(p.number)(),address:Oe}))),et=Object(p.type)({executable:Object(p.boolean)(),owner:Oe,lamports:Object(p.number)(),data:we,rentEpoch:Object(p.number)()}),tt=Object(p.type)({pubkey:Oe,account:et}),rt=Object(p.coerce)(Object(p.union)([Object(p.instance)(n.Buffer),Xe]),Object(p.union)([Se,Xe]),e=>Array.isArray(e)?Object(p.create)(e,we):e),nt=Object(p.type)({executable:Object(p.boolean)(),owner:Oe,lamports:Object(p.number)(),data:rt,rentEpoch:Object(p.number)()}),st=Object(p.type)({pubkey:Oe,account:nt}),it=Object(p.type)({state:Object(p.union)([Object(p.literal)("active"),Object(p.literal)("inactive"),Object(p.literal)("activating"),Object(p.literal)("deactivating")]),active:Object(p.number)(),inactive:Object(p.number)()}),ot=Ae(Object(p.array)(Object(p.type)({signature:Object(p.string)(),slot:Object(p.number)(),err:Le,memo:Object(p.nullable)(Object(p.string)()),blockTime:Object(p.optional)(Object(p.nullable)(Object(p.number)()))}))),at=Ae(Object(p.array)(Object(p.type)({signature:Object(p.string)(),slot:Object(p.number)(),err:Le,memo:Object(p.nullable)(Object(p.string)()),blockTime:Object(p.optional)(Object(p.nullable)(Object(p.number)()))}))),ct=Object(p.type)({subscription:Object(p.number)(),result:Te(et)}),ut=Object(p.type)({pubkey:Oe,account:et}),lt=Object(p.type)({subscription:Object(p.number)(),result:Te(ut)}),dt=Object(p.type)({parent:Object(p.number)(),slot:Object(p.number)(),root:Object(p.number)()}),bt=Object(p.type)({subscription:Object(p.number)(),result:dt}),ht=Object(p.union)([Object(p.type)({type:Object(p.union)([Object(p.literal)("firstShredReceived"),Object(p.literal)("completed"),Object(p.literal)("optimisticConfirmation"),Object(p.literal)("root")]),slot:Object(p.number)(),timestamp:Object(p.number)()}),Object(p.type)({type:Object(p.literal)("createdBank"),parent:Object(p.number)(),slot:Object(p.number)(),timestamp:Object(p.number)()}),Object(p.type)({type:Object(p.literal)("frozen"),slot:Object(p.number)(),timestamp:Object(p.number)(),stats:Object(p.type)({numTransactionEntries:Object(p.number)(),numSuccessfulTransactions:Object(p.number)(),numFailedTransactions:Object(p.number)(),maxTransactionsPerEntry:Object(p.number)()})}),Object(p.type)({type:Object(p.literal)("dead"),slot:Object(p.number)(),timestamp:Object(p.number)(),err:Object(p.string)()})]),pt=Object(p.type)({subscription:Object(p.number)(),result:ht}),gt=Object(p.type)({subscription:Object(p.number)(),result:Te(Object(p.union)([Ne,ze]))}),yt=Object(p.type)({subscription:Object(p.number)(),result:Object(p.number)()}),mt=Object(p.type)({pubkey:Object(p.string)(),gossip:Object(p.nullable)(Object(p.string)()),tpu:Object(p.nullable)(Object(p.string)()),rpc:Object(p.nullable)(Object(p.string)()),version:Object(p.nullable)(Object(p.string)())}),ft=Object(p.type)({votePubkey:Object(p.string)(),nodePubkey:Object(p.string)(),activatedStake:Object(p.number)(),epochVoteAccount:Object(p.boolean)(),epochCredits:Object(p.array)(Object(p.tuple)([Object(p.number)(),Object(p.number)(),Object(p.number)()])),commission:Object(p.number)(),lastVote:Object(p.number)(),rootSlot:Object(p.nullable)(Object(p.number)())}),kt=Ae(Object(p.type)({current:Object(p.array)(ft),delinquent:Object(p.array)(ft)})),Ot=Object(p.union)([Object(p.literal)("processed"),Object(p.literal)("confirmed"),Object(p.literal)("finalized")]),St=Object(p.type)({slot:Object(p.number)(),confirmations:Object(p.nullable)(Object(p.number)()),err:Le,confirmationStatus:Object(p.optional)(Ot)}),wt=Ee(Object(p.array)(Object(p.nullable)(St))),jt=Ae(Object(p.number)()),It=Object(p.type)({accountKey:Oe,writableIndexes:Object(p.array)(Object(p.number)()),readonlyIndexes:Object(p.array)(Object(p.number)())}),Pt=Object(p.type)({signatures:Object(p.array)(Object(p.string)()),message:Object(p.type)({accountKeys:Object(p.array)(Object(p.string)()),header:Object(p.type)({numRequiredSignatures:Object(p.number)(),numReadonlySignedAccounts:Object(p.number)(),numReadonlyUnsignedAccounts:Object(p.number)()}),instructions:Object(p.array)(Object(p.type)({accounts:Object(p.array)(Object(p.number)()),data:Object(p.string)(),programIdIndex:Object(p.number)()})),recentBlockhash:Object(p.string)(),addressTableLookups:Object(p.optional)(Object(p.array)(It))})}),_t=Object(p.type)({parsed:Object(p.unknown)(),program:Object(p.string)(),programId:Oe}),At=Object(p.type)({accounts:Object(p.array)(Oe),data:Object(p.string)(),programId:Oe}),Et=Object(p.union)([At,_t]),Tt=Object(p.union)([Object(p.type)({parsed:Object(p.unknown)(),program:Object(p.string)(),programId:Object(p.string)()}),Object(p.type)({accounts:Object(p.array)(Object(p.string)()),data:Object(p.string)(),programId:Object(p.string)()})]),vt=Object(p.coerce)(Et,Tt,e=>"accounts"in e?Object(p.create)(e,At):Object(p.create)(e,_t)),Rt=Object(p.type)({signatures:Object(p.array)(Object(p.string)()),message:Object(p.type)({accountKeys:Object(p.array)(Object(p.type)({pubkey:Oe,signer:Object(p.boolean)(),writable:Object(p.boolean)()})),instructions:Object(p.array)(vt),recentBlockhash:Object(p.string)(),addressTableLookups:Object(p.optional)(Object(p.nullable)(Object(p.array)(It)))})}),Bt=Object(p.type)({accountIndex:Object(p.number)(),mint:Object(p.string)(),owner:Object(p.optional)(Object(p.string)()),uiTokenAmount:$e}),Ct=Object(p.type)({writable:Object(p.array)(Oe),readonly:Object(p.array)(Oe)}),Kt=Object(p.type)({err:Le,fee:Object(p.number)(),innerInstructions:Object(p.optional)(Object(p.nullable)(Object(p.array)(Object(p.type)({index:Object(p.number)(),instructions:Object(p.array)(Object(p.type)({accounts:Object(p.array)(Object(p.number)()),data:Object(p.string)(),programIdIndex:Object(p.number)()}))})))),preBalances:Object(p.array)(Object(p.number)()),postBalances:Object(p.array)(Object(p.number)()),logMessages:Object(p.optional)(Object(p.nullable)(Object(p.array)(Object(p.string)()))),preTokenBalances:Object(p.optional)(Object(p.nullable)(Object(p.array)(Bt))),postTokenBalances:Object(p.optional)(Object(p.nullable)(Object(p.array)(Bt))),loadedAddresses:Object(p.optional)(Ct),computeUnitsConsumed:Object(p.optional)(Object(p.number)())}),xt=Object(p.type)({err:Le,fee:Object(p.number)(),innerInstructions:Object(p.optional)(Object(p.nullable)(Object(p.array)(Object(p.type)({index:Object(p.number)(),instructions:Object(p.array)(vt)})))),preBalances:Object(p.array)(Object(p.number)()),postBalances:Object(p.array)(Object(p.number)()),logMessages:Object(p.optional)(Object(p.nullable)(Object(p.array)(Object(p.string)()))),preTokenBalances:Object(p.optional)(Object(p.nullable)(Object(p.array)(Bt))),postTokenBalances:Object(p.optional)(Object(p.nullable)(Object(p.array)(Bt))),loadedAddresses:Object(p.optional)(Ct),computeUnitsConsumed:Object(p.optional)(Object(p.number)())}),Lt=Object(p.union)([Object(p.literal)(0),Object(p.literal)("legacy")]),Nt=Ae(Object(p.nullable)(Object(p.type)({blockhash:Object(p.string)(),previousBlockhash:Object(p.string)(),parentSlot:Object(p.number)(),transactions:Object(p.array)(Object(p.type)({transaction:Pt,meta:Object(p.nullable)(Kt),version:Object(p.optional)(Lt)})),rewards:Object(p.optional)(Object(p.array)(Object(p.type)({pubkey:Object(p.string)(),lamports:Object(p.number)(),postBalance:Object(p.nullable)(Object(p.number)()),rewardType:Object(p.nullable)(Object(p.string)())}))),blockTime:Object(p.nullable)(Object(p.number)()),blockHeight:Object(p.nullable)(Object(p.number)())}))),zt=Ae(Object(p.nullable)(Object(p.type)({blockhash:Object(p.string)(),previousBlockhash:Object(p.string)(),parentSlot:Object(p.number)(),transactions:Object(p.array)(Object(p.type)({transaction:Pt,meta:Object(p.nullable)(Kt)})),rewards:Object(p.optional)(Object(p.array)(Object(p.type)({pubkey:Object(p.string)(),lamports:Object(p.number)(),postBalance:Object(p.nullable)(Object(p.number)()),rewardType:Object(p.nullable)(Object(p.string)())}))),blockTime:Object(p.nullable)(Object(p.number)())}))),Wt=Ae(Object(p.nullable)(Object(p.type)({blockhash:Object(p.string)(),previousBlockhash:Object(p.string)(),parentSlot:Object(p.number)(),signatures:Object(p.array)(Object(p.string)()),blockTime:Object(p.nullable)(Object(p.number)())}))),qt=Ae(Object(p.nullable)(Object(p.type)({slot:Object(p.number)(),meta:Kt,blockTime:Object(p.optional)(Object(p.nullable)(Object(p.number)())),transaction:Pt,version:Object(p.optional)(Lt)}))),Vt=Ae(Object(p.nullable)(Object(p.type)({slot:Object(p.number)(),transaction:Rt,meta:Object(p.nullable)(xt),blockTime:Object(p.optional)(Object(p.nullable)(Object(p.number)())),version:Object(p.optional)(Lt)}))),Ut=Ee(Object(p.type)({blockhash:Object(p.string)(),feeCalculator:Object(p.type)({lamportsPerSignature:Object(p.number)()})})),Jt=Ee(Object(p.type)({blockhash:Object(p.string)(),lastValidBlockHeight:Object(p.number)()})),Mt=Object(p.type)({slot:Object(p.number)(),numTransactions:Object(p.number)(),numSlots:Object(p.number)(),samplePeriodSecs:Object(p.number)()}),Ht=Ae(Object(p.array)(Mt)),Dt=Ee(Object(p.nullable)(Object(p.type)({feeCalculator:Object(p.type)({lamportsPerSignature:Object(p.number)()})}))),Ft=Ae(Object(p.string)()),$t=Ae(Object(p.string)()),Yt=Object(p.type)({err:Le,logs:Object(p.array)(Object(p.string)()),signature:Object(p.string)()}),Gt=Object(p.type)({result:Te(Yt),subscription:Object(p.number)()}),Xt={"solana-client":"js/"+(null!=="0.0.0-development"?"0.0.0-development":"UNKNOWN")};class Connection{constructor(e,t){let r,n,s,i,o;var a;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,r=t.wsEndpoint,n=t.httpHeaders,s=t.fetch,i=t.fetchMiddleware,o=t.disableRetryOnRateLimit),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=r||function(e){const t=e.match(ke);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);const[r,n,s,i]=t,o=e.startsWith("https:")?"wss:":"ws:",a=null==s?null:parseInt(s.slice(1),10);return`${o}//${n}${null==a?"":":"+(a+1)}${i}`}(e),this._rpcClient=function(e,t,r,n,s){const i=r||me;let o;return n&&(o=async(e,t)=>{const r=await new Promise((r,s)=>{try{n(e,t,(e,t)=>r([e,t]))}catch(e){s(e)}});return await i(...r)}),new m.a(async(r,n)=>{const a={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},Xt)};try{let t,r=5,c=500;for(;(t=o?await o(e,a):await i(e,a),429===t.status)&&!0!==s&&(r-=1,0!==r);)console.log(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${c}ms delay...`),await te(c),c*=2;const u=await t.text();t.ok?n(null,u):n(new Error(`${t.status} ${t.statusText}: ${u}`))}catch(e){e instanceof Error&&n(e)}},{})}(e,n,s,i,o),this._rpcRequest=(a=this._rpcClient,(e,t)=>new Promise((r,n)=>{a.request(e,t,(e,t)=>{e?n(e):r(t)})})),this._rpcBatchRequest=function(e){return t=>new Promise((r,n)=>{0===t.length&&r([]);const s=t.map(t=>e.request(t.methodName,t.args));e.request(s,(e,t)=>{e?n(e):r(t)})})}(this._rpcClient),this._rpcWebSocket=new g.Client(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){const{commitment:r,config:n}=Ie(t),s=this._buildArgs([e.toBase58()],r,void 0,n),i=await this._rpcRequest("getBalance",s),o=Object(p.create)(i,Ee(Object(p.number)()));if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get balance for "+e.toBase58());return o.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then(e=>e.value).catch(t=>{throw new Error("failed to get balance of account "+e.toBase58()+": "+t)})}async getBlockTime(e){const t=await this._rpcRequest("getBlockTime",[e]),r=Object(p.create)(t,Ae(Object(p.nullable)(Object(p.number)())));if("error"in r)throw new SolanaJSONRPCError(r.error,"failed to get block time for slot "+e);return r.result}async getMinimumLedgerSlot(){const e=await this._rpcRequest("minimumLedgerSlot",[]),t=Object(p.create)(e,Ae(Object(p.number)()));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const e=await this._rpcRequest("getFirstAvailableBlock",[]),t=Object(p.create)(e,De);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"==typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};const r=await this._rpcRequest("getSupply",[t]),n=Object(p.create)(r,Fe);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get supply");return n.result}async getTokenSupply(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenSupply",r),s=Object(p.create)(n,Ee($e));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get token supply");return s.result}async getTokenAccountBalance(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenAccountBalance",r),s=Object(p.create)(n,Ee($e));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get token account balance");return s.result}async getTokenAccountsByOwner(e,t,r){const{commitment:n,config:s}=Ie(r);let i=[e.toBase58()];"mint"in t?i.push({mint:t.mint.toBase58()}):i.push({programId:t.programId.toBase58()});const o=this._buildArgs(i,n,"base64",s),a=await this._rpcRequest("getTokenAccountsByOwner",o),c=Object(p.create)(a,Ge);if("error"in c)throw new SolanaJSONRPCError(c.error,"failed to get token accounts owned by account "+e.toBase58());return c.result}async getParsedTokenAccountsByOwner(e,t,r){let n=[e.toBase58()];"mint"in t?n.push({mint:t.mint.toBase58()}):n.push({programId:t.programId.toBase58()});const s=this._buildArgs(n,r,"jsonParsed"),i=await this._rpcRequest("getTokenAccountsByOwner",s),o=Object(p.create)(i,Ze);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get token accounts owned by account "+e.toBase58());return o.result}async getLargestAccounts(e){const t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],n=await this._rpcRequest("getLargestAccounts",r),s=Object(p.create)(n,Qe);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get largest accounts");return s.result}async getTokenLargestAccounts(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenLargestAccounts",r),s=Object(p.create)(n,Ye);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get token largest accounts");return s.result}async getAccountInfoAndContext(e,t){const{commitment:r,config:n}=Ie(t),s=this._buildArgs([e.toBase58()],r,"base64",n),i=await this._rpcRequest("getAccountInfo",s),o=Object(p.create)(i,Ee(Object(p.nullable)(et)));if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get info about account "+e.toBase58());return o.result}async getParsedAccountInfo(e,t){const{commitment:r,config:n}=Ie(t),s=this._buildArgs([e.toBase58()],r,"jsonParsed",n),i=await this._rpcRequest("getAccountInfo",s),o=Object(p.create)(i,Ee(Object(p.nullable)(nt)));if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get info about account "+e.toBase58());return o.result}async getAccountInfo(e,t){try{return(await this.getAccountInfoAndContext(e,t)).value}catch(t){throw new Error("failed to get info about account "+e.toBase58()+": "+t)}}async getMultipleAccountsInfoAndContext(e,t){const{commitment:r,config:n}=Ie(t),s=e.map(e=>e.toBase58()),i=this._buildArgs([s],r,"base64",n),o=await this._rpcRequest("getMultipleAccounts",i),a=Object(p.create)(o,Ee(Object(p.array)(Object(p.nullable)(et))));if("error"in a)throw new SolanaJSONRPCError(a.error,"failed to get info for accounts "+s);return a.result}async getMultipleAccountsInfo(e,t){return(await this.getMultipleAccountsInfoAndContext(e,t)).value}async getStakeActivation(e,t,r){const{commitment:n,config:s}=Ie(t),i=this._buildArgs([e.toBase58()],n,void 0,{...s,epoch:null!=r?r:null==s?void 0:s.epoch}),o=await this._rpcRequest("getStakeActivation",i),a=Object(p.create)(o,Ae(it));if("error"in a)throw new SolanaJSONRPCError(a.error,"failed to get Stake Activation "+e.toBase58());return a.result}async getProgramAccounts(e,t){const{commitment:r,config:n}=Ie(t),{encoding:s,...i}=n||{},o=this._buildArgs([e.toBase58()],r,s||"base64",i),a=await this._rpcRequest("getProgramAccounts",o),c=Object(p.create)(a,Ae(Object(p.array)(tt)));if("error"in c)throw new SolanaJSONRPCError(c.error,"failed to get accounts owned by program "+e.toBase58());return c.result}async getParsedProgramAccounts(e,t){const{commitment:r,config:n}=Ie(t),s=this._buildArgs([e.toBase58()],r,"jsonParsed",n),i=await this._rpcRequest("getProgramAccounts",s),o=Object(p.create)(i,Ae(Object(p.array)(st)));if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get accounts owned by program "+e.toBase58());return o.result}async confirmTransaction(e,t){let r,n;if("string"==typeof e)r=e;else{r=e.signature}try{n=u.a.decode(r)}catch(e){throw new Error("signature must be base58 encoded: "+r)}V(64===n.length,"signature has invalid length");const s=t||this.commitment;let i,o,a=!1;const c=new Promise((e,t)=>{try{o=this.onSignature(r,(t,r)=>{o=void 0;const n={context:r,value:t};a=!0,e({__type:J.PROCESSED,response:n})},s)}catch(e){t(e)}}),l=new Promise(r=>{if("string"==typeof e){let e=this._confirmTransactionInitialTimeout||6e4;switch(s){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":e=this._confirmTransactionInitialTimeout||3e4}i=setTimeout(()=>r({__type:J.TIMED_OUT,timeoutMs:e}),e)}else{let n=e;const s=async()=>{try{return await this.getBlockHeight(t)}catch(e){return-1}};(async()=>{let e=await s();if(!a){for(;e<=n.lastValidBlockHeight;){if(await te(1e3),a)return;if(e=await s(),a)return}r({__type:J.BLOCKHEIGHT_EXCEEDED})}})()}});let d;try{const e=await Promise.race([c,l]);switch(e.__type){case J.BLOCKHEIGHT_EXCEEDED:throw new TransactionExpiredBlockheightExceededError(r);case J.PROCESSED:d=e.response;break;case J.TIMED_OUT:throw new TransactionExpiredTimeoutError(r,e.timeoutMs/1e3)}}finally{clearTimeout(i),o&&this.removeSignatureListener(o)}return d}async getClusterNodes(){const e=await this._rpcRequest("getClusterNodes",[]),t=Object(p.create)(e,Ae(Object(p.array)(mt)));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),n=Object(p.create)(r,kt);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get vote accounts");return n.result}async getSlot(e){const{commitment:t,config:r}=Ie(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getSlot",n),i=Object(p.create)(s,Ae(Object(p.number)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get slot");return i.result}async getSlotLeader(e){const{commitment:t,config:r}=Ie(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getSlotLeader",n),i=Object(p.create)(s,Ae(Object(p.string)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get slot leader");return i.result}async getSlotLeaders(e,t){const r=[e,t],n=await this._rpcRequest("getSlotLeaders",r),s=Object(p.create)(n,Ae(Object(p.array)(Oe)));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get slot leaders");return s.result}async getSignatureStatus(e,t){const{context:r,value:n}=await this.getSignatureStatuses([e],t);V(1===n.length);return{context:r,value:n[0]}}async getSignatureStatuses(e,t){const r=[e];t&&r.push(t);const n=await this._rpcRequest("getSignatureStatuses",r),s=Object(p.create)(n,wt);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get signature status");return s.result}async getTransactionCount(e){const{commitment:t,config:r}=Ie(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getTransactionCount",n),i=Object(p.create)(s,Ae(Object(p.number)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get transaction count");return i.result}async getTotalSupply(e){return(await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),n=Object(p.create)(r,Ue);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get inflation");return n.result}async getInflationReward(e,t,r){const{commitment:n,config:s}=Ie(r),i=this._buildArgs([e.map(e=>e.toBase58())],n,void 0,{...s,epoch:null!=t?t:null==s?void 0:s.epoch}),o=await this._rpcRequest("getInflationReward",i),a=Object(p.create)(o,Be);if("error"in a)throw new SolanaJSONRPCError(a.error,"failed to get inflation reward");return a.result}async getEpochInfo(e){const{commitment:t,config:r}=Ie(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getEpochInfo",n),i=Object(p.create)(s,Je);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get epoch info");return i.result}async getEpochSchedule(){const e=await this._rpcRequest("getEpochSchedule",[]),t=Object(p.create)(e,Me);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get epoch schedule");const r=t.result;return new EpochSchedule(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const e=await this._rpcRequest("getLeaderSchedule",[]),t=Object(p.create)(e,He);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getMinimumBalanceForRentExemption",r),s=Object(p.create)(n,jt);return"error"in s?(console.warn("Unable to fetch minimum balance for rent exemption"),0):s.result}async getRecentBlockhashAndContext(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),n=Object(p.create)(r,Ut);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get recent blockhash");return n.result}async getRecentPerformanceSamples(e){const t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=Object(p.create)(t,Ht);if("error"in r)throw new SolanaJSONRPCError(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getFeeCalculatorForBlockhash",r),s=Object(p.create)(n,Dt);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get fee calculator");const{context:i,value:o}=s.result;return{context:i,value:null!==o?o.feeCalculator:null}}async getFeeForMessage(e,t){const r=e.serialize().toString("base64"),n=this._buildArgs([r],t),s=await this._rpcRequest("getFeeForMessage",n),i=Object(p.create)(s,Ee(Object(p.nullable)(Object(p.number)())));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get slot");if(null===i.result)throw new Error("invalid blockhash");return i.result}async getRecentBlockhash(e){try{return(await this.getRecentBlockhashAndContext(e)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(e){try{return(await this.getLatestBlockhashAndContext(e)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(e){const{commitment:t,config:r}=Ie(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getLatestBlockhash",n),i=Object(p.create)(s,Jt);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get latest blockhash");return i.result}async getVersion(){const e=await this._rpcRequest("getVersion",[]),t=Object(p.create)(e,Ae(We));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get version");return t.result}async getGenesisHash(){const e=await this._rpcRequest("getGenesisHash",[]),t=Object(p.create)(e,Ae(Object(p.string)()));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){const{commitment:r,config:n}=Ie(t),s=this._buildArgsAtLeastConfirmed([e],r,void 0,n),i=await this._rpcRequest("getBlock",s),o=Object(p.create)(i,Nt);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get confirmed block");const a=o.result;return a?{...a,transactions:a.transactions.map(({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:ve(r,e.message)},version:r}))}:a}async getBlockHeight(e){const{commitment:t,config:r}=Ie(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getBlockHeight",n),i=Object(p.create)(s,Ae(Object(p.number)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get block height information");return i.result}async getBlockProduction(e){let t,r;if("string"==typeof e)r=e;else if(e){const{commitment:n,...s}=e;r=n,t=s}const n=this._buildArgs([],r,"base64",t),s=await this._rpcRequest("getBlockProduction",n),i=Object(p.create)(s,Ve);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get block production information");return i.result}async getTransaction(e,t){const{commitment:r,config:n}=Ie(t),s=this._buildArgsAtLeastConfirmed([e],r,void 0,n),i=await this._rpcRequest("getTransaction",s),o=Object(p.create)(i,qt);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get transaction");const a=o.result;return a?{...a,transaction:{...a.transaction,message:ve(a.version,a.transaction.message)}}:a}async getParsedTransaction(e,t){const{commitment:r,config:n}=Ie(t),s=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),i=await this._rpcRequest("getTransaction",s),o=Object(p.create)(i,Vt);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get transaction");return o.result}async getParsedTransactions(e,t){const{commitment:r,config:n}=Ie(t),s=e.map(e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n)}));return(await this._rpcBatchRequest(s)).map(e=>{const t=Object(p.create)(e,Vt);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get transactions");return t.result})}async getTransactions(e,t){const{commitment:r,config:n}=Ie(t),s=e.map(e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,void 0,n)}));return(await this._rpcBatchRequest(s)).map(e=>{const t=Object(p.create)(e,qt);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get transactions");const r=t.result;return r?{...r,transaction:{...r.transaction,message:ve(r.version,r.transaction.message)}}:r})}async getConfirmedBlock(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedBlock",r),s=Object(p.create)(n,zt);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get confirmed block");const i=s.result;if(!i)throw new Error("Confirmed block "+e+" not found");const o={...i,transactions:i.transactions.map(({transaction:e,meta:t})=>{const r=new Message(e.message);return{meta:t,transaction:{...e,message:r}}})};return{...o,transactions:o.transactions.map(({transaction:e,meta:t})=>({meta:t,transaction:Transaction.populate(e.message,e.signatures)}))}}async getBlocks(e,t,r){const n=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),s=await this._rpcRequest("getBlocks",n),i=Object(p.create)(s,Ae(Object(p.array)(Object(p.number)())));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get blocks");return i.result}async getBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getBlock",r),s=Object(p.create)(n,Wt);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get block");const i=s.result;if(!i)throw new Error("Block "+e+" not found");return i}async getConfirmedBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getConfirmedBlock",r),s=Object(p.create)(n,Wt);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get confirmed block");const i=s.result;if(!i)throw new Error("Confirmed block "+e+" not found");return i}async getConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedTransaction",r),s=Object(p.create)(n,qt);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get transaction");const i=s.result;if(!i)return i;const o=new Message(i.transaction.message),a=i.transaction.signatures;return{...i,transaction:Transaction.populate(o,a)}}async getParsedConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),n=await this._rpcRequest("getConfirmedTransaction",r),s=Object(p.create)(n,Vt);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get confirmed transaction");return s.result}async getParsedConfirmedTransactions(e,t){const r=e.map(e=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([e],t,"jsonParsed")}));return(await this._rpcBatchRequest(r)).map(e=>{const t=Object(p.create)(e,Vt);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get confirmed transactions");return t.result})}async getConfirmedSignaturesForAddress(e,t,r){let n={},s=await this.getFirstAvailableBlock();for(;!("until"in n)&&!(--t<=0||t<s);)try{const e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(n.until=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}let i=await this.getSlot("finalized");for(;!("before"in n||++r>i);)try{const e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(n.before=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}return(await this.getConfirmedSignaturesForAddress2(e,n)).map(e=>e.signature)}async getConfirmedSignaturesForAddress2(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),s=await this._rpcRequest("getConfirmedSignaturesForAddress2",n),i=Object(p.create)(s,ot);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get confirmed signatures for address");return i.result}async getSignaturesForAddress(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),s=await this._rpcRequest("getSignaturesForAddress",n),i=Object(p.create)(s,at);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get signatures for address");return i.result}async getAddressLookupTable(e,t){const{context:r,value:n}=await this.getAccountInfoAndContext(e,t);let s=null;return null!==n&&(s=new AddressLookupTableAccount({key:e,state:AddressLookupTableAccount.deserialize(n.data)})),{context:r,value:s}}async getNonceAndContext(e,t){const{context:r,value:n}=await this.getAccountInfoAndContext(e,t);let s=null;return null!==n&&(s=NonceAccount.fromAccountData(n.data)),{context:r,value:s}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then(e=>e.value).catch(t=>{throw new Error("failed to get nonce for account "+e.toBase58()+": "+t)})}async requestAirdrop(e,t){const r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),n=Object(p.create)(r,Ft);if("error"in n)throw new SolanaJSONRPCError(n.error,`airdrop to ${e.toBase58()} failed`);return n.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await te(100);const e=Date.now()-this._blockhashInfo.lastFetch>=je;if(null!==this._blockhashInfo.latestBlockhash&&!e)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let e=0;e<50;e++){const e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await te(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){const{commitment:t,config:r}=Ie(e),n=this._buildArgs([],t,"base64",r),s=await this._rpcRequest("getStakeMinimumDelegation",n),i=Object(p.create)(s,Ee(Object(p.number)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get stake minimum delegation");return i.result}async simulateTransaction(e,t,r){let n;if(e instanceof Transaction){let t=e;n=new Transaction,n.feePayer=t.feePayer,n.instructions=e.instructions,n.nonceInfo=t.nonceInfo,n.signatures=t.signatures}else n=Transaction.populate(e),n._message=n._json=void 0;if(n.nonceInfo&&t)n.sign(...t);else{let e=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(e);if(n.lastValidBlockHeight=r.lastValidBlockHeight,n.recentBlockhash=r.blockhash,!t)break;if(n.sign(...t),!n.signature)throw new Error("!signature");const s=n.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(s)&&!this._blockhashInfo.transactionSignatures.includes(s)){this._blockhashInfo.simulatedSignatures.push(s);break}e=!0}}const s=n._compile(),i=s.serialize(),o=n._serialize(i).toString("base64"),a={encoding:"base64",commitment:this.commitment};if(r){const e=(Array.isArray(r)?r:s.nonProgramIds()).map(e=>e.toBase58());a.accounts={encoding:"base64",addresses:e}}t&&(a.sigVerify=!0);const c=[o,a],u=await this._rpcRequest("simulateTransaction",c),l=Object(p.create)(u,qe);if("error"in l){let e;if("data"in l.error&&(e=l.error.data.logs,e&&Array.isArray(e))){const t="\n    ",r=t+e.join(t);console.error(l.error.message,r)}throw new SendTransactionError("failed to simulate transaction: "+l.error.message,e)}return l.result}async sendTransaction(e,t,r){if(e.nonceInfo)e.sign(...t);else{let r=this._disableBlockhashCaching;for(;;){const n=await this._blockhashWithExpiryBlockHeight(r);if(e.lastValidBlockHeight=n.lastValidBlockHeight,e.recentBlockhash=n.blockhash,e.sign(...t),!e.signature)throw new Error("!signature");const s=e.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(s)){this._blockhashInfo.transactionSignatures.push(s);break}r=!0}}const n=e.serialize();return await this.sendRawTransaction(n,r)}async sendRawTransaction(e,t){const r=E(e).toString("base64");return await this.sendEncodedTransaction(r,t)}async sendEncodedTransaction(e,t){const r={encoding:"base64"},n=t&&t.skipPreflight,s=t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),n&&(r.skipPreflight=n),s&&(r.preflightCommitment=s);const i=[e,r],o=await this._rpcRequest("sendTransaction",i),a=Object(p.create)(o,$t);if("error"in a){let e;throw"data"in a.error&&(e=a.error.data.logs),new SendTransactionError("failed to send transaction: "+a.error.message,e)}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval(()=>{this._rpcWebSocket.notify("ping").catch(()=>{})},5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration++,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==e?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach(([e,t])=>{this._subscriptionsByHash[e]={...t,state:"pending"}})):this._updateSubscriptions()}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout(()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log("Error when closing socket connection: "+e.message)}},500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const e=this._rpcWebSocketGeneration,t=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map(async e=>{const r=this._subscriptionsByHash[e];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size)return delete this._subscriptionsByHash[e],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],void await this._updateSubscriptions();await(async()=>{const{args:n,method:s}=r;try{this._subscriptionsByHash[e]={...r,state:"subscribing"};const t=await this._rpcWebSocket.call(s,n);this._subscriptionsByHash[e]={...r,serverSubscriptionId:t,state:"subscribed"},this._subscriptionCallbacksByServerSubscriptionId[t]=r.callbacks,await this._updateSubscriptions()}catch(i){if(i instanceof Error&&console.error(s+" error for argument",n,i.message),!t())return;this._subscriptionsByHash[e]={...r,state:"pending"},await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await(async()=>{const{serverSubscriptionId:n,unsubscribeMethod:s}=r;if(this._subscriptionsAutoDisposedByRpc.has(n))this._subscriptionsAutoDisposedByRpc.delete(n);else{this._subscriptionsByHash[e]={...r,state:"unsubscribing"};try{await this._rpcWebSocket.call(s,[n])}catch(n){if(n instanceof Error&&console.error(s+" error:",n.message),!t())return;return this._subscriptionsByHash[e]={...r,state:"subscribed"},void await this._updateSubscriptions()}}this._subscriptionsByHash[e]={...r,state:"unsubscribed"},await this._updateSubscriptions()})()}}))}_handleServerNotification(e,t){const r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach(e=>{try{e(...t)}catch(e){console.error(e)}})}_wsOnAccountNotification(e){const{result:t,subscription:r}=Object(p.create)(e,ct);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){const r=this._nextClientSubscriptionId++,n=pe([e.method,t],!0),s=this._subscriptionsByHash[n];return void 0===s?this._subscriptionsByHash[n]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:s.callbacks.add(e.callback),this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r];const t=this._subscriptionsByHash[n];V(void 0!==t,"Could not find a `Subscription` when tearing down client subscription #"+r),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){const n=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},n)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){const{result:t,subscription:r}=Object(p.create)(e,lt);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,n){const s=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64",n?{filters:n}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},s)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){const n=this._buildArgs(["object"==typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},n)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){const{result:t,subscription:r}=Object(p.create)(e,Gt);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){const{result:t,subscription:r}=Object(p.create)(e,bt);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){const{result:t,subscription:r}=Object(p.create)(e,pt);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,n){const s=t||this._commitment;if(s||r||n){let t={};r&&(t.encoding=r),s&&(t.commitment=s),n&&(t=Object.assign(t,n)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,n){const s=t||this._commitment;if(s&&!["confirmed","finalized"].includes(s))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,n)}_wsOnSignatureNotification(e){const{result:t,subscription:r}=Object(p.create)(e,gt);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){const n=this._buildArgs([e],r||this._commitment||"finalized"),s=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(s)}catch(e){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},n);return s}onSignatureWithOptions(e,t,r){const{commitment:n,...s}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},i=this._buildArgs([e],n,void 0,s),o=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(o)}catch(e){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return o}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){const{result:t,subscription:r}=Object(p.create)(e,yt);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class Keypair{constructor(e){this._keypair=void 0,this._keypair=null!=e?e:j()}static generate(){return new Keypair(j())}static fromSecretKey(e,t){if(64!==e.byteLength)throw new Error("bad secret key size");const r=e.slice(32,64);if(!t||!t.skipValidation){const t=e.slice(0,32),n=I(t);for(let e=0;e<32;e++)if(r[e]!==n[e])throw new Error("provided secretKey is invalid")}return new Keypair({publicKey:r,secretKey:e})}static fromSeed(e){const t=I(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new Keypair({publicKey:t,secretKey:r})}get publicKey(){return new PublicKey(this._keypair.publicKey)}get secretKey(){return this._keypair.secretKey}}const Zt=Object.freeze({CreateLookupTable:{index:0,layout:b.struct([b.u32("instruction"),ae("recentSlot"),b.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:b.struct([b.u32("instruction")])},ExtendLookupTable:{index:2,layout:b.struct([b.u32("instruction"),ae(),b.seq(L(),b.offset(b.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:b.struct([b.u32("instruction")])},CloseLookupTable:{index:4,layout:b.struct([b.u32("instruction")])}});class AddressLookupTableInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=b.u32("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(Zt))if(n.index==t){r=e;break}if(!r)throw new Error("Invalid Instruction. Should be a LookupTable Instruction");return r}static decodeCreateLookupTable(e){this.checkProgramId(e.programId),this.checkKeysLength(e.keys,4);const{recentSlot:t}=ne(Zt.CreateLookupTable,e.data);return{authority:e.keys[1].pubkey,payer:e.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(e){if(this.checkProgramId(e.programId),e.keys.length<2)throw new Error(`invalid instruction; found ${e.keys.length} keys, expected at least 2`);const{addresses:t}=ne(Zt.ExtendLookupTable,e.data);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,payer:e.keys.length>2?e.keys[2].pubkey:void 0,addresses:t.map(e=>new PublicKey(e))}}static decodeCloseLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,3),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,recipient:e.keys[2].pubkey}}static decodeFreezeLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static decodeDeactivateLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(AddressLookupTableProgram.programId))throw new Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}class AddressLookupTableProgram{constructor(){}static createLookupTable(e){const[t,r]=PublicKey.findProgramAddressSync([e.authority.toBuffer(),Object(h.toBufferLE)(BigInt(e.recentSlot),8)],this.programId),n=re(Zt.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),s=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:SystemProgram.programId,isSigner:!1,isWritable:!1}];return[new TransactionInstruction({programId:this.programId,keys:s,data:n}),t]}static freezeLookupTable(e){const t=re(Zt.FreezeLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new TransactionInstruction({programId:this.programId,keys:r,data:t})}static extendLookupTable(e){const t=re(Zt.ExtendLookupTable,{addresses:e.addresses.map(e=>e.toBytes())}),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&r.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:SystemProgram.programId,isSigner:!1,isWritable:!1}),new TransactionInstruction({programId:this.programId,keys:r,data:t})}static deactivateLookupTable(e){const t=re(Zt.DeactivateLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new TransactionInstruction({programId:this.programId,keys:r,data:t})}static closeLookupTable(e){const t=re(Zt.CloseLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new TransactionInstruction({programId:this.programId,keys:r,data:t})}}AddressLookupTableProgram.programId=new PublicKey("AddressLookupTab1e1111111111111111111111111");class ComputeBudgetInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=b.u8("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(Qt))if(n.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction");return r}static decodeRequestUnits(e){this.checkProgramId(e.programId);const{units:t,additionalFee:r}=ne(Qt.RequestUnits,e.data);return{units:t,additionalFee:r}}static decodeRequestHeapFrame(e){this.checkProgramId(e.programId);const{bytes:t}=ne(Qt.RequestHeapFrame,e.data);return{bytes:t}}static decodeSetComputeUnitLimit(e){this.checkProgramId(e.programId);const{units:t}=ne(Qt.SetComputeUnitLimit,e.data);return{units:t}}static decodeSetComputeUnitPrice(e){this.checkProgramId(e.programId);const{microLamports:t}=ne(Qt.SetComputeUnitPrice,e.data);return{microLamports:t}}static checkProgramId(e){if(!e.equals(ComputeBudgetProgram.programId))throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}const Qt=Object.freeze({RequestUnits:{index:0,layout:b.struct([b.u8("instruction"),b.u32("units"),b.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:b.struct([b.u8("instruction"),b.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:b.struct([b.u8("instruction"),b.u32("units")])},SetComputeUnitPrice:{index:3,layout:b.struct([b.u8("instruction"),ae("microLamports")])}});class ComputeBudgetProgram{constructor(){}static requestUnits(e){const t=re(Qt.RequestUnits,e);return new TransactionInstruction({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){const t=re(Qt.RequestHeapFrame,e);return new TransactionInstruction({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){const t=re(Qt.SetComputeUnitLimit,e);return new TransactionInstruction({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){const t=re(Qt.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new TransactionInstruction({keys:[],programId:this.programId,data:t})}}ComputeBudgetProgram.programId=new PublicKey("ComputeBudget111111111111111111111111111111");const er=b.struct([b.u8("numSignatures"),b.u8("padding"),b.u16("signatureOffset"),b.u16("signatureInstructionIndex"),b.u16("publicKeyOffset"),b.u16("publicKeyInstructionIndex"),b.u16("messageDataOffset"),b.u16("messageDataSize"),b.u16("messageInstructionIndex")]);class Ed25519Program{constructor(){}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:s,instructionIndex:i}=e;V(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),V(64===s.length,`Signature must be 64 bytes but received ${s.length} bytes`);const o=er.span,a=o+t.length,c=a+s.length,u=n.Buffer.alloc(c+r.length),l=null==i?65535:i;return er.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:l,publicKeyOffset:o,publicKeyInstructionIndex:l,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:l},u),u.fill(t,o),u.fill(s,a),u.fill(r,c),new TransactionInstruction({keys:[],programId:Ed25519Program.programId,data:u})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:n}=e;V(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{const e=Keypair.fromSecretKey(t),s=e.publicKey.toBytes(),i=_(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:s,message:r,signature:i,instructionIndex:n})}catch(e){throw new Error("Error creating instruction; "+e)}}}Ed25519Program.programId=new PublicKey("Ed25519SigVerify111111111111111111111111111"),S.utils.hmacSha256Sync=(e,...t)=>{const r=O.hmac.create(l.sha256,e);return t.forEach(e=>r.update(e)),r.digest()};S.utils.isValidPrivateKey;const tr=S.getPublicKey,rr=b.struct([b.u8("numSignatures"),b.u16("signatureOffset"),b.u8("signatureInstructionIndex"),b.u16("ethAddressOffset"),b.u8("ethAddressInstructionIndex"),b.u16("messageDataOffset"),b.u16("messageDataSize"),b.u8("messageInstructionIndex"),b.blob(20,"ethAddress"),b.blob(64,"signature"),b.u8("recoveryId")]);class Secp256k1Program{constructor(){}static publicKeyToEthAddress(e){V(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return n.Buffer.from(k.a.keccak_256.update(E(e)).digest()).slice(-20)}catch(e){throw new Error("Error constructing Ethereum address: "+e)}}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:n,recoveryId:s,instructionIndex:i}=e;return Secp256k1Program.createInstructionWithEthAddress({ethAddress:Secp256k1Program.publicKeyToEthAddress(t),message:r,signature:n,recoveryId:s,instructionIndex:i})}static createInstructionWithEthAddress(e){const{ethAddress:t,message:r,signature:s,recoveryId:i,instructionIndex:o=0}=e;let a;a="string"==typeof t?t.startsWith("0x")?n.Buffer.from(t.substr(2),"hex"):n.Buffer.from(t,"hex"):t,V(20===a.length,`Address must be 20 bytes but received ${a.length} bytes`);const c=12+a.length,u=c+s.length+1,l=n.Buffer.alloc(rr.span+r.length);return rr.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:o,ethAddressOffset:12,ethAddressInstructionIndex:o,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:o,signature:E(s),ethAddress:E(a),recoveryId:i},l),l.fill(E(r),rr.span),new TransactionInstruction({keys:[],programId:Secp256k1Program.programId,data:l})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:s}=e;V(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{const e=E(t),a=tr(e,!1).slice(1),c=n.Buffer.from(k.a.keccak_256.update(E(r)).digest()),[u,l]=(i=c,o=e,S.signSync(i,o,{der:!1,recovered:!0}));return this.createInstructionWithPublicKey({publicKey:a,message:r,signature:u,recoveryId:l,instructionIndex:s})}catch(e){throw new Error("Error creating instruction; "+e)}var i,o}}Secp256k1Program.programId=new PublicKey("KeccakSecp256k11111111111111111111111111111");const nr=new PublicKey("StakeConfig11111111111111111111111111111111");class Authorized{constructor(e,t){this.staker=void 0,this.withdrawer=void 0,this.staker=e,this.withdrawer=t}}class Lockup{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}Lockup.default=new Lockup(0,0,PublicKey.default);class StakeInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=b.u32("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(sr))if(n.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a StakeInstruction");return r}static decodeInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t,lockup:r}=ne(sr.Initialize,e.data);return{stakePubkey:e.keys[0].pubkey,authorized:new Authorized(new PublicKey(t.staker),new PublicKey(t.withdrawer)),lockup:new Lockup(r.unixTimestamp,r.epoch,new PublicKey(r.custodian))}}static decodeDelegate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,6),ne(sr.Delegate,e.data),{stakePubkey:e.keys[0].pubkey,votePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[5].pubkey}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,stakeAuthorizationType:r}=ne(sr.Authorize,e.data),n={stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new PublicKey(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(n.custodianPubkey=e.keys[3].pubkey),n}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{newAuthorized:t,stakeAuthorizationType:r,authoritySeed:n,authorityOwner:s}=ne(sr.AuthorizeWithSeed,e.data),i={stakePubkey:e.keys[0].pubkey,authorityBase:e.keys[1].pubkey,authoritySeed:n,authorityOwner:new PublicKey(s),newAuthorizedPubkey:new PublicKey(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(i.custodianPubkey=e.keys[3].pubkey),i}static decodeSplit(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=ne(sr.Split,e.data);return{stakePubkey:e.keys[0].pubkey,splitStakePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[2].pubkey,lamports:t}}static decodeMerge(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ne(sr.Merge,e.data),{stakePubkey:e.keys[0].pubkey,sourceStakePubKey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=ne(sr.Withdraw,e.data),r={stakePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t};return e.keys.length>5&&(r.custodianPubkey=e.keys[5].pubkey),r}static decodeDeactivate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ne(sr.Deactivate,e.data),{stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static checkProgramId(e){if(!e.equals(StakeProgram.programId))throw new Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const sr=Object.freeze({Initialize:{index:0,layout:b.struct([b.u32("instruction"),((e="authorized")=>b.struct([L("staker"),L("withdrawer")],e))(),((e="lockup")=>b.struct([b.ns64("unixTimestamp"),b.ns64("epoch"),L("custodian")],e))()])},Authorize:{index:1,layout:b.struct([b.u32("instruction"),L("newAuthorized"),b.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:b.struct([b.u32("instruction")])},Split:{index:3,layout:b.struct([b.u32("instruction"),b.ns64("lamports")])},Withdraw:{index:4,layout:b.struct([b.u32("instruction"),b.ns64("lamports")])},Deactivate:{index:5,layout:b.struct([b.u32("instruction")])},Merge:{index:7,layout:b.struct([b.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:b.struct([b.u32("instruction"),L("newAuthorized"),b.u32("stakeAuthorizationType"),z("authoritySeed"),L("authorityOwner")])}}),ir=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class StakeProgram{constructor(){}static initialize(e){const{stakePubkey:t,authorized:r,lockup:n}=e,s=n||Lockup.default,i=re(sr.Initialize,{authorized:{staker:E(r.staker.toBuffer()),withdrawer:E(r.withdrawer.toBuffer())},lockup:{unixTimestamp:s.unixTimestamp,epoch:s.epoch,custodian:E(s.custodian.toBuffer())}}),o={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:Y,isSigner:!1,isWritable:!1}],programId:this.programId,data:i};return new TransactionInstruction(o)}static createAccountWithSeed(e){const t=new Transaction;t.add(SystemProgram.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:n,lockup:s}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:s}))}static createAccount(e){const t=new Transaction;t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:n,lockup:s}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:s}))}static delegate(e){const{stakePubkey:t,authorizedPubkey:r,votePubkey:n}=e,s=re(sr.Delegate);return(new Transaction).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:Q,isSigner:!1,isWritable:!1},{pubkey:nr,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static authorize(e){const{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,stakeAuthorizationType:s,custodianPubkey:i}=e,o=re(sr.Authorize,{newAuthorized:E(n.toBuffer()),stakeAuthorizationType:s.index}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:H,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!1,isWritable:!1}),(new Transaction).add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(e){const{stakePubkey:t,authorityBase:r,authoritySeed:n,authorityOwner:s,newAuthorizedPubkey:i,stakeAuthorizationType:o,custodianPubkey:a}=e,c=re(sr.AuthorizeWithSeed,{newAuthorized:E(i.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:n,authorityOwner:E(s.toBuffer())}),u=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:H,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!1,isWritable:!1}),(new Transaction).add({keys:u,programId:this.programId,data:c})}static splitInstruction(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,lamports:s}=e,i=re(sr.Split,{lamports:s});return new TransactionInstruction({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static split(e){const t=new Transaction;return t.add(SystemProgram.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:0,space:this.space,programId:this.programId})),t.add(this.splitInstruction(e))}static splitWithSeed(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,basePubkey:s,seed:i,lamports:o}=e,a=new Transaction;return a.add(SystemProgram.allocate({accountPubkey:n,basePubkey:s,seed:i,space:this.space,programId:this.programId})),a.add(this.splitInstruction({stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,lamports:o}))}static merge(e){const{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:n}=e,s=re(sr.Merge);return(new Transaction).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:Q,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static withdraw(e){const{stakePubkey:t,authorizedPubkey:r,toPubkey:n,lamports:s,custodianPubkey:i}=e,o=re(sr.Withdraw,{lamports:s}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:Q,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!1,isWritable:!1}),(new Transaction).add({keys:a,programId:this.programId,data:o})}static deactivate(e){const{stakePubkey:t,authorizedPubkey:r}=e,n=re(sr.Deactivate);return(new Transaction).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}}StakeProgram.programId=new PublicKey("Stake11111111111111111111111111111111111111"),StakeProgram.space=200;class VoteInit{constructor(e,t,r,n){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=e,this.authorizedVoter=t,this.authorizedWithdrawer=r,this.commission=n}}class VoteInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=b.u32("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(or))if(n.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a VoteInstruction");return r}static decodeInitializeAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,4);const{voteInit:t}=ne(or.InitializeAccount,e.data);return{votePubkey:e.keys[0].pubkey,nodePubkey:e.keys[3].pubkey,voteInit:new VoteInit(new PublicKey(t.nodePubkey),new PublicKey(t.authorizedVoter),new PublicKey(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,voteAuthorizationType:r}=ne(or.Authorize,e.data);return{votePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new PublicKey(t),voteAuthorizationType:{index:r}}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=ne(or.Withdraw,e.data);return{votePubkey:e.keys[0].pubkey,authorizedWithdrawerPubkey:e.keys[2].pubkey,lamports:t,toPubkey:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(VoteProgram.programId))throw new Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const or=Object.freeze({InitializeAccount:{index:0,layout:b.struct([b.u32("instruction"),((e="voteInit")=>b.struct([L("nodePubkey"),L("authorizedVoter"),L("authorizedWithdrawer"),b.u8("commission")],e))()])},Authorize:{index:1,layout:b.struct([b.u32("instruction"),L("newAuthorized"),b.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:b.struct([b.u32("instruction"),b.ns64("lamports")])}}),ar=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class VoteProgram{constructor(){}static initializeAccount(e){const{votePubkey:t,nodePubkey:r,voteInit:n}=e,s=re(or.InitializeAccount,{voteInit:{nodePubkey:E(n.nodePubkey.toBuffer()),authorizedVoter:E(n.authorizedVoter.toBuffer()),authorizedWithdrawer:E(n.authorizedWithdrawer.toBuffer()),commission:n.commission}}),i={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:Y,isSigner:!1,isWritable:!1},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s};return new TransactionInstruction(i)}static createAccount(e){const t=new Transaction;return t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){const{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,voteAuthorizationType:s}=e,i=re(or.Authorize,{newAuthorized:E(n.toBuffer()),voteAuthorizationType:s.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:H,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new Transaction).add({keys:o,programId:this.programId,data:i})}static withdraw(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:n,toPubkey:s}=e,i=re(or.Withdraw,{lamports:n}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return(new Transaction).add({keys:o,programId:this.programId,data:i})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw new Error("Withdraw will leave vote account with insuffcient funds.");return VoteProgram.withdraw(e)}}VoteProgram.programId=new PublicKey("Vote111111111111111111111111111111111111111"),VoteProgram.space=3731;const cr=new PublicKey("Va1idator1nfo111111111111111111111111111111"),ur=Object(p.type)({name:Object(p.string)(),website:Object(p.optional)(Object(p.string)()),details:Object(p.optional)(Object(p.string)()),keybaseUsername:Object(p.optional)(Object(p.string)())});class ValidatorInfo{constructor(e,t){this.key=void 0,this.info=void 0,this.key=e,this.info=t}static fromConfigData(e){let t=[...e];if(2!==W(t))return null;const r=[];for(let e=0;e<2;e++){const e=new PublicKey(t.slice(0,R));t=t.slice(R);const n=1===t.slice(0,1)[0];t=t.slice(1),r.push({publicKey:e,isSigner:n})}if(r[0].publicKey.equals(cr)&&r[1].isSigner){const e=z().decode(n.Buffer.from(t)),s=JSON.parse(e);return Object(p.assert)(s,ur),new ValidatorInfo(r[1].publicKey,s)}return null}}const lr=new PublicKey("Vote111111111111111111111111111111111111111"),dr=b.struct([L("nodePubkey"),L("authorizedWithdrawer"),b.u8("commission"),b.nu64(),b.seq(b.struct([b.nu64("slot"),b.u32("confirmationCount")]),b.offset(b.u32(),-8),"votes"),b.u8("rootSlotValid"),b.nu64("rootSlot"),b.nu64(),b.seq(b.struct([b.nu64("epoch"),L("authorizedVoter")]),b.offset(b.u32(),-8),"authorizedVoters"),b.struct([b.seq(b.struct([L("authorizedPubkey"),b.nu64("epochOfLastAuthorizedSwitch"),b.nu64("targetEpoch")]),32,"buf"),b.nu64("idx"),b.u8("isEmpty")],"priorVoters"),b.nu64(),b.seq(b.struct([b.nu64("epoch"),b.nu64("credits"),b.nu64("prevCredits")]),b.offset(b.u32(),-8),"epochCredits"),b.struct([b.nu64("slot"),b.nu64("timestamp")],"lastTimestamp")]);class VoteAccount{constructor(e){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=e.nodePubkey,this.authorizedWithdrawer=e.authorizedWithdrawer,this.commission=e.commission,this.rootSlot=e.rootSlot,this.votes=e.votes,this.authorizedVoters=e.authorizedVoters,this.priorVoters=e.priorVoters,this.epochCredits=e.epochCredits,this.lastTimestamp=e.lastTimestamp}static fromAccountData(e){const t=dr.decode(E(e),4);let r=t.rootSlot;return t.rootSlotValid||(r=null),new VoteAccount({nodePubkey:new PublicKey(t.nodePubkey),authorizedWithdrawer:new PublicKey(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:r,authorizedVoters:t.authorizedVoters.map(br),priorVoters:pr(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function br({authorizedVoter:e,epoch:t}){return{epoch:t,authorizedVoter:new PublicKey(e)}}function hr({authorizedPubkey:e,epochOfLastAuthorizedSwitch:t,targetEpoch:r}){return{authorizedPubkey:new PublicKey(e),epochOfLastAuthorizedSwitch:t,targetEpoch:r}}function pr({buf:e,idx:t,isEmpty:r}){return r?[]:[...e.slice(t+1).map(hr),...e.slice(0,t).map(hr)]}const gr={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function yr(e,t){const r=!1===t?"http":"https";if(!e)return gr[r].devnet;const n=gr[r][e];if(!n)throw new Error(`Unknown ${r} cluster: ${e}`);return n}async function mr(e,t,r,n){let s,i;r&&Object.prototype.hasOwnProperty.call(r,"lastValidBlockHeight")?(s=r,i=n):i=r;const o=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,minContextSlot:i.minContextSlot},a=await e.sendRawTransaction(t,o),c=i&&i.commitment,u=s?e.confirmTransaction(s,c):e.confirmTransaction(a,c),l=(await u).value;if(l.err)throw new Error(`Raw transaction ${a} failed (${JSON.stringify(l)})`);return a}const fr=1e9}}]);