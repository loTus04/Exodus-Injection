(window.webpackJsonp=window.webpackJsonp||[]).push([[283],{4227:function(t,e,s){"use strict";s.r(e);var a=s(180),i=s(243),n=s(794),r=s(402),c=s(74),o=s.n(c),h=s(155),d=s(4),l=s(3),u=s(4428),g=s(896),m=s(469);const k=r.bytes.pack(1,1),y="Governance ZIL",b="gZIL",w=15,f="zil14pzuzq6v6pmmmrfjhczywguu0e97djepxt8g3e",p=!1;class ZILCoin extends(Object(m.g)(Object(m.h)(h.a))){constructor({alias:t,feeData:e,explorers:s,txWebUrl:a,socket:i,stakingContract:r,stakingProxyContract:c}){super({alias:t,name:"Zilliqa",ticker:"ZIL",decimal:12,derivation:"m/44'/313'/0'/0/0",unspendableBalance:"0",explorers:s,txWebUrl:a,socket:i,stakingContract:r,feeData:e,stakingProxyContract:c}),this.derivation="m/44'/313'/0'/0/0",this.plugins=[new g.a],this.fee=e.fee,this.feeData=e,this.transactions=[],this.tokens={},this.nonce=0,this.stakingProxyContract=e.stakingProxyContract,this.stakingContract=e.stakingContract,this.stakingFeeGas=String(e.stakingFeeGas)||25e3,this.unstakingFeeGas=String(e.unstakingFeeGas)||25e3,this.claimFeeGas=String(e.claimFeeGas)||25e3,this.tokenFeeGas=String(e.tokenFeeGas)||1e3,this.sendFeeGas=String(e.sendFeeGas)||100,this.zilliqa=new n.Zilliqa,this.balances={},this.gasLimit=String(e.gasLimit),this.gasSettings=e.gasSettings,this.reserveForStake=e.reserveForStake||"8400000000000"}async loadWallet(t,e){const s=a.bip32.fromSeed(t).derivePath(this.derivation);if(!s)throw new d.i({type:l.n,error:new Error("can't get a privateKey!"),instance:this});const n=o.a.decode(s.toWIF()).toString("hex");return this.privateKey=n.slice(2,66),this.zilliqa.wallet.addByPrivateKey(this.privateKey),this.address=Object(i.toBech32Address)(Object(i.getAddressFromPrivateKey)(this.privateKey)),this.oldFormatAddressForBalance=Object(i.getAddressFromPrivateKey)(this.privateKey).replace(/^0x/,""),this}getNonce(){const t=Number(this.nonce)+1;return this.nonce=t,t}async getFee({sendType:t="send",userGasPrice:e=this.getGasPrice(t.toLowerCase()),gasLimit:s=this.getGasLimit(t.toLowerCase()),isToken:a}={}){return a&&(s=this.tokenFeeGas),new this.BN(e).mul(new this.BN(s||100))}getAddress(){return this.privateKey?Object(i.toBech32Address)(Object(i.getAddressFromPrivateKey)(this.privateKey)):new d.i({type:l.x,error:new Error("privateKey is empty!"),instance:this})}async validateAddress(t){try{return Object(i.isValidChecksumAddress)(Object(i.fromBech32Address)(t))}catch(t){return!1}}toValidChecksumAddress(t){let e="";try{e=Object(i.toChecksumAddress)(t)}catch(s){e=Object(i.toChecksumAddress)(Object(i.fromBech32Address)(t))}return e.toLowerCase()}async createTransaction({address:t,amount:e,sendType:s="send"}){return await this.getInfo(),{version:k,toAddr:t,amount:new this.BN(e),gasPrice:new this.BN(this.getGasPrice(s.toLowerCase())),gasLimit:r.Long.fromString(this.getGasLimit(s.toLowerCase())),nonce:this.getNonce(),pubKey:this.zilliqa.wallet.defaultAccount.publicKey}}async sendTransaction(t){return this.getProvider("send").sendTransaction({rawtx:t,privateKey:this.privateKey})}async getInfo(){const{balance:t,nonce:e}=await this.getProvider("balance").getBalance(this.address,this.stakingContract);try{const{staking:e,withdrawals:s}=await this.getProvider("staking").getStakingBalance(this.address,this.stakingContract);this.balances.staking=e,this.balances.withdrawals=s;const a=await this.getProvider("rewards").getRewards(this.address,this.stakingContract,e);this.balances.rewards=a;const i=new this.BN(t||0),n=new this.BN(i).add(new this.BN(e.total)).add(new this.BN(s.total)).add(new this.BN(a.total)).toString(),c=r.units.fromQa(i,"zil"),o=this.getGasLimit("stake"),h=await this.getFee({gasLimit:o||1}),d=new this.BN(i).sub(new this.BN(h)).sub(new this.BN(this.reserveForStake));this.balance=n,this.balances.available=c,this.balances.availableForStake=Number(d)>0?r.units.fromQa(d,"zil"):"0",this.balances.total=n}catch(e){this.balance=t,console.error(e)}const s=Object.keys(this.tokens||{}).filter(Boolean);if(s.length>0){(await this.getProvider("token").getTokenBalance(this.address,s)||[]).forEach(t=>{this.tokens[t.contract].balance=t.balance})}return e&&(this.nonce=Number(e)>Number(this.nonce)?Number(e):this.nonce),{balance:t,balances:this.balances}}setPrivateKey(...t){super.setPrivateKey(...t),this.zilliqa.wallet.addByPrivateKey(this.privateKey),this.oldFormatAddressForBalance=Object(i.getAddressFromPrivateKey)(this.privateKey).replace(/^0x/,"")}changeProviders(t){const e=t.find(t=>!0===t.balanceProvider);this.balanceProvider=e&&"ViewblockExplorer"===e.className?this.explorer:this.node}updateCoinParamsFromServer(t){super.updateCoinParamsFromServer(t),this.changeProviders(t.explorers)}async createDelegationTransaction({validator:t="",amount:e=0}){return await this.getInfo(),{version:k,toAddr:Object(i.fromBech32Address)(this.stakingProxyContract),amount:new this.BN(e),gasPrice:new this.BN(this.fee),gasLimit:r.Long.fromNumber(this.stakingFeeGas),nonce:this.getNonce(),pubKey:this.zilliqa.wallet.defaultAccount.publicKey,data:JSON.stringify({_tag:"DelegateStake",params:[{vname:"ssnaddr",type:"ByStr20",value:this.toValidChecksumAddress(t)}]})}}async createUnDelegationTransaction({validator:t="",amount:e=0,gasPrice:s=this.getGasPrice(),gasLimit:a=this.getGasLimit("unstake")}){return await this.getInfo(),{version:k,toAddr:Object(i.fromBech32Address)(this.stakingProxyContract),amount:new this.BN(0),gasPrice:new this.BN(s),gasLimit:r.Long.fromNumber(a),nonce:this.getNonce(),pubKey:this.zilliqa.wallet.defaultAccount.publicKey,data:JSON.stringify({_tag:"WithdrawStakeAmt",params:[{vname:"ssnaddr",type:"ByStr20",value:this.toValidChecksumAddress(t)},{vname:"amt",type:"Uint128",value:String(e)}]})}}async completeWithdrawal(){return await this.getInfo(),{version:k,toAddr:Object(i.fromBech32Address)(this.stakingProxyContract),amount:new this.BN(0),gasPrice:new this.BN(this.fee),gasLimit:r.Long.fromNumber(this.stakingFeeGas),nonce:this.getNonce(),pubKey:this.zilliqa.wallet.defaultAccount.publicKey,data:JSON.stringify({_tag:"CompleteWithdrawal",params:[]})}}async createClaimTransaction({validator:t="",gasPrice:e=this.getGasPrice("claim"),gasLimit:s=this.getGasLimit("claim")}){return await this.getInfo(),{version:k,toAddr:Object(i.fromBech32Address)(this.stakingProxyContract),amount:new this.BN(0),gasPrice:new this.BN(e),gasLimit:r.Long.fromNumber(s),nonce:this.getNonce(),pubKey:this.zilliqa.wallet.defaultAccount.publicKey,data:JSON.stringify({_tag:"WithdrawStakeRewards",params:[{vname:"ssnaddr",type:"ByStr20",value:this.toValidChecksumAddress(t)}]})}}async createTokenTransaction({address:t,amount:e,contract:s}){return await this.getInfo(),{version:k,toAddr:Object(i.fromBech32Address)(s),amount:new this.BN(0),gasPrice:new this.BN(this.fee),gasLimit:r.Long.fromNumber(this.tokenFeeGas),nonce:this.getNonce(),pubKey:this.zilliqa.wallet.defaultAccount.publicKey,data:JSON.stringify({_tag:"Transfer",params:[{vname:"to",type:"ByStr20",value:Object(i.fromBech32Address)(t)},{vname:"amount",type:"Uint128",value:String(e)}]})}}createToken(...t){return new u.i(this.ticker,...t)}getExcludedTokenList(){return[]}async fetchUserTokens(){return[]}async loadTokensList(t){const e=this.createToken(y,b,w,f,f,JSON.parse(p),!0);t.push(e),t.store.walletsCollection[e.alias].set(e.id.toUpperCase(),e),this.tokens[e.contract]=e}getGasLimit(t="send"){switch(t){case"send":return this.sendFeeGas;case"stake":return this.stakingFeeGas;case"unstake":return this.unstakingFeeGas;case"claim":return this.claimFeeGas;default:return this.sendFeeGas}}getGasPrice(t="send"){return this.fee}getGasRange(t="send"){return this.feeData[t]||this.feeData.gasSettings||this.feeDataDefaults.gasSettings}}e.default=ZILCoin},4428:function(t,e,s){"use strict";s.d(e,"c",(function(){return c})),s.d(e,"b",(function(){return o})),s.d(e,"g",(function(){return h})),s.d(e,"a",(function(){return d})),s.d(e,"h",(function(){return l})),s.d(e,"i",(function(){return u})),s.d(e,"e",(function(){return k})),s.d(e,"d",(function(){return y})),s.d(e,"f",(function(){return THETAToken_THETAToken}));var a=s(31),i=s(394),n=s(4),r=s(3);class ETHToken_ETHToken extends i.a{constructor(...t){super(...t),this.gasLimit="150000",this.coefficient=1}async getInfo(){return{balance:String(this.balance),transactions:this.transactions}}async getFee({amount:t=0,isSendAll:e,gasPrice:s,gasLimit:a}){const i=Number(s.toString())*Number(this.coefficient),n=a||this.gasLimit;return new this.BN(n).mul(new this.BN(i))}getFeeSettings(){return a.a.get("eth-gas-price")}async createTransaction({address:t,amount:e,custom:s,userGasPrice:a,gasLimit:i=this.gasLimit,multiplier:n=this.multiplier,nonce:r}){return{address:t,amount:e,custom:s,userGasPrice:a,gasLimit:i,contract:this.contract,multiplier:n,nonce:r}}async sendTransaction(t){return new Promise((e,s)=>{this.web3.eth.sendSignedTransaction(t).on("transactionHash",t=>{e({txid:t})}).catch(t=>{const e=this.parent.coreLibrary.currentProvider.host,a=new n.d({type:r.s,error:t,url:e,instance:this});s(a)})})}}var c=ETHToken_ETHToken;class BSCToken_BSCToken extends i.a{constructor(...t){super(...t),this.gasLimit="150000",this.coefficient=1}async getInfo(){return{balance:String(this.balance),transactions:this.transactions}}async getFee({amount:t=0,isSendAll:e,gasPrice:s,gasLimit:a}){const i=Number(s.toString())*Number(this.coefficient),n=a||this.gasLimit;return new this.BN(n).mul(new this.BN(i))}async createTransaction({address:t,amount:e,custom:s,userGasPrice:a,gasLimit:i=this.gasLimit,multiplier:n=this.multiplier,nonce:r}){return{address:t,amount:e,custom:s,userGasPrice:a,gasLimit:i,contract:this.contract,multiplier:n,nonce:r}}async sendTransaction(t){return new Promise((e,s)=>{this.web3.eth.sendSignedTransaction(t).on("transactionHash",t=>{e({txid:t})}).catch(t=>{const e=this.parent.coreLibrary.currentProvider.host,a=new n.d({type:r.s,error:t,url:e,instance:this});s(a)})})}}var o=BSCToken_BSCToken;class TRXToken_TRXToken extends i.a{async createTransaction({address:t,amount:e}){return{address:t,amount:e,contract:this.contract,transfer:!0,feeLimit:1e7}}getUserTicker(){return-1!==this.ticker.indexOf("-")&&this.ticker.split("-")[1]||this.ticker}}var h=TRXToken_TRXToken;class BNBToken_BNBToken extends i.a{constructor(...t){super(...t),this.fields.paymentId=!0,this.balances={}}async availableBalance(){return this.balances&&this.balances.available?this.balances.available:this.divisibleBalance?String(this.divisibleBalance):"0"}async getInfo(){return await this.getBalance(),{balance:String(this.balance),transactions:this.transactions}}async createTransaction({address:t,amount:e,memo:s}){return{address:t,amount:e,memo:s,asset:this.ticker}}async getBalance(){return this.balance}async getTransactions(){return this.transactions}getUserTicker(){return this.ticker.split("-")[0]}}var d=BNBToken_BNBToken;class VETToken_VETToken extends i.a{constructor(...t){super(...t),this.fee="60"}get feeTicker(){return"VTHO"}async getInfo(){return{balance:String(this.balance),transactions:this.transactions}}async getFee(){return new this.BN(this.toMinimalUnit(this.fee))}async createTransaction({address:t,amount:e}){const s=Number(this.toCurrencyUnit(await this.getFee())),a=`0xa9059cbb${this.addLeadingZero(t.substring(2),64)}${this.addLeadingZero(new this.BN(e).toString(16),64)}`;return{contract:this.contract,amount:"0",dataToSend:a,fee:s}}async isAvailableForFee(){const t=await this.getFee();return this.indivisibleBalance.gte(t)}async availableBalance(){const t=await this.getFee(),e=new this.BN(this.balance).sub(t);return e.lt(new this.BN(0))?"0":this.toCurrencyUnit(e)}addLeadingZero(t,e){return String(t).padStart(e,"0")}}var l=VETToken_VETToken;class ZILToken_ZILToken extends i.a{async createTransaction({address:t,amount:e}){return{address:t,amount:e,contract:this.contract}}}var u=ZILToken_ZILToken,g=s(16),m=s.n(g);class MATICToken_MATICToken extends i.a{constructor(...t){super(...t),this.gasLimit="150000",this.coefficient=1,this.BN=m.a}async getInfo(){return{balance:String(this.balance),transactions:this.transactions}}async getFee({gasPrice:t,gasLimit:e}){const s=new this.BN(t.toString()).mul(new this.BN(this.coefficient)),a=e||this.gasLimit;return new this.BN(a).mul(new this.BN(s))}async createTransaction({address:t,amount:e,custom:s,userGasPrice:a,gasLimit:i=this.gasLimit,multiplier:n=this.multiplier,nonce:r}){return{address:t,amount:e,custom:s,userGasPrice:a,gasLimit:i,contract:this.contract,multiplier:n,nonce:r}}async sendTransaction(t){return new Promise((e,s)=>{this.web3.eth.sendSignedTransaction(t).on("transactionHash",t=>{e({txid:t})}).catch(t=>{const e=this.parent.coreLibrary.currentProvider.host;s(new n.d({type:r.s,error:t,url:e,instance:this}))})})}}var k=MATICToken_MATICToken;class LUNCToken_LUNCToken extends i.a{constructor(...t){super(...t),this.denom=t[9],this.fields.paymentId=!0}async createTransaction({address:t,amount:e,userGasPrice:s,gasLimit:a,multiplier:i,feeLimit:n=1e7,memo:r}){return{address:t,amount:e,contract:this.contract,transfer:!0,ticker:this.ticker,userGasPrice:s,gasLimit:a,multiplier:i,feeLimit:n,denom:this.denom,memo:r}}}var y=LUNCToken_LUNCToken;class THETAToken_THETAToken extends i.a{constructor(...t){super(...t),this.id=this.ticker,this.network=this.config.network}async createTransaction({address:t,amount:e,userFee:s}){return{address:t,amount:e,contract:this.contract,ticker:this.ticker,userFee:s||await this.getFee()}}getFeeTicker(){return this.config.feeTicker}async availableBalance(t){if(!this.balance)return"0";const e=new m.a(this.balance).sub(new m.a(t));return e.gte(new m.a(0))?this.toCurrencyUnit(e):"0"}async isAvailableForSend(t,e){const s=await this.availableBalance(this.toMinimalUnit(e));return new m.a(this.toMinimalUnit(t)).lte(new m.a(this.toMinimalUnit(s)))}async getFee(){const t=this.config.defaultFee;if(!t)throw new Error(this.ticker+" provide defaultFee in config");return new this.BN(t)}}}}]);