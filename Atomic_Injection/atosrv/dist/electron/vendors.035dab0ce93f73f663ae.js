(window.webpackJsonp=window.webpackJsonp||[]).push([[305],{4273:function(a,t,e){"use strict";e.r(t);var n=e(180),s=e(622),i=e.n(s),r=e(16),o=e.n(r),c=e(155),l=e(4);async function d(a,t,e){return new Promise((n,s)=>{setTimeout(async()=>{try{const e=await a(...t);n(e)}catch(a){s(a)}},e)})}async function u(a,t,e,n){for(let s=0;s<e;s++)try{return await d(a,t,n)}catch(a){console.warn(a)}}var h=e(3),g=e(469);const b="cx0000000000000000000000000000000000000000",m="Incorrect balance, possibly balance is not fetched",v="Stake",w="Claim reward",C="Delegate";class ICXCoin_ICXCoin extends(Object(g.g)(c.a)){constructor({alias:a,feeData:t,explorers:e,txWebUrl:n,socket:s}){super({alias:a,name:"ICON",ticker:"ICX",decimal:18,derivation:"m/44'/74'/0'/0/0",unspendableBalance:"0",explorers:e,txWebUrl:n,socket:s,feeData:t}),this.fee=t.fee,this.stepLimit=t.stepLimit,this.transactions=[],this.fields.paymentId=!1,this.balances={staking:{}}}getICXWallet(a){return i.a.IconWallet.loadPrivateKey(a)}async loadWallet(a){const t=n.bip32.fromSeed(a).derivePath(this.derivation);if(!t)throw new l.i({type:h.x,error:new Error("can't get a privateKey!"),instance:this});const e=this.getICXWallet(t.privateKey.toString("hex"));return this.privateKey=e.getPrivateKey(),this.address=await e.getAddress(),this}getAddress(a=this.privateKey){if(a){return this.getICXWallet(a).getAddress()}return new l.i({type:h.x,error:new Error("privateKey is empty!"),instance:this})}async validateAddress(a){return i.a.IconValidator.isAddress(a)}async getInfo(){const a=await this.getProvider("balance").getInfo(this.address);a.balances={available:this.toCurrencyUnit(a.balance),total:new o.a(a.balance)};const t=(new i.a.IconBuilder.CallBuilder).from(this.address).to(b).method("getStake").params({address:this.address}).build(),e=await this.getProvider("call").call(t),n=await this.getProvider("call").call({to:b,dataType:"call",data:{method:"getDelegation",params:{address:this.address}}});a.validators=n.delegations;const s=(new i.a.IconBuilder.CallBuilder).from(this.address).to(b).method("queryIScore").params({address:this.address}).build(),r=await this.getProvider("call").call(s),c=new o.a(n.totalDelegated.replace("0x",""),16),l=new o.a(n.votingPower.replace("0x",""),16).add(c),d=new o.a(r.estimatedICX.replace("0x",""),16);a.balances.rewards=this.toCurrencyUnit(d),a.balances.total=a.balances.total.add(d),a.balances.delegatedVotes=this.toCurrencyUnit(c.toString()),a.balances.availableVotes=this.toCurrencyUnit(l.toString());let u=new o.a(0);if(e.unstake&&(u=new o.a(e.unstake.replace("0x",""),16),a.balances.unstaking=this.toCurrencyUnit(u.toString()),a.balances.total=a.balances.total.add(u)),e.unstakes&&e.unstakes.length>0){let t=new o.a(0);e.unstakes.forEach(({unstake:a})=>{const e=new o.a(a.replace("0x",""),16);t=t.add(e)}),a.balances.unstaking=this.toCurrencyUnit(t.toString()),a.balances.total=a.balances.total.add(t),u=u.add(t)}if(e.stake){const t=new o.a(e.stake.replace("0x",""),16),n=new o.a(a.balance).add(t).add(u).sub(new o.a(this.fee));n.gtn(0)?a.balances.availableToStake=this.toCurrencyUnit(n):a.balances.availableToStake=0,a.balances.availableToUnstake=this.toCurrencyUnit(t);const s={};a.validators.forEach(({address:a,value:t})=>{let e=new o.a(t.replace("0x",""),16);e=this.toCurrencyUnit(e.toString()),s[a]={address:a,shares:e}}),a.balances.staked=this.toCurrencyUnit(t.toString()),a.balances.staking={total:a.balances.staked,validators:s},a.balances.stakedSatoshis=t,a.balances.total=a.balances.total.add(t)}return this.balance=a.balances.total,a.balances.total=this.toCurrencyUnit(a.balances.total.toString()),this.balances={...a.balances,validators:a.validators},{balance:this.balance,balances:this.balances}}async signTransaction(a){const t=this.getICXWallet(this.privateKey);return new i.a.SignedTransaction(a,t)}async createTransaction({address:a,amount:t}){const e=(new i.a.IconBuilder.IcxTransactionBuilder).from(this.address).to(a).value(t).stepLimit(this.stepLimit).nid(i.a.IconConverter.toBigNumber(1)).nonce(i.a.IconConverter.toBigNumber(1)).version(i.a.IconConverter.toBigNumber(3)).timestamp(1e3*(new Date).getTime()).build();return this.signTransaction(e)}async createCallTransaction(a,t){const e=(new i.a.IconBuilder.CallTransactionBuilder).from(this.address).to(b).value(0).stepLimit(this.stepLimit).nid(i.a.IconConverter.toBigNumber(1)).nonce(i.a.IconConverter.toBigNumber(1)).version(i.a.IconConverter.toBigNumber(3)).timestamp(1e3*(new Date).getTime()).method(a).params(t).build();return this.signTransaction(e)}async createStakeTransaction({amount:a}){return this.createCallTransaction("setStake",{value:i.a.IconConverter.toHexNumber(a)})}async stake({amount:a,validator:t}){if(!this.balances)throw new Error(m);const e=new o.a(this.toMinimalUnit(a)),n=this.balances.stakedSatoshis?this.balances.stakedSatoshis.add(e):e,s=await this.createStakeTransaction({amount:n.toString()});await this.sendTransactionOnce(s);const i=await this.vote({validator:t,amount:a});return u(this.getInfo.bind(this),[void 0],3,7500),i}async unstake(){if(!this.balances)throw new Error(m);const a=await this.getInfo();if(Number(a.balances.delegatedVotes)>0){var t;const e=[];null!==(t=a.balances)&&void 0!==t&&t.validators&&a.balances.validators.forEach(a=>{e.push({address:a.address,value:"0x0"})});const n=await this.createCallTransaction("setDelegation",{delegations:e});await this.sendTransactionOnce(n)}const e=await this.createStakeTransaction({amount:0}),{txid:n}=await this.sendTransaction(e);return u(this.getInfo.bind(this),[void 0],3,7500),n}async vote({validator:a,amount:t}){var e;const n=[],s=await this.getInfo();let r;null!==(e=s.balances)&&void 0!==e&&e.validators&&Number(s.balances.delegatedVotes)>0&&s.balances.validators.forEach(t=>{t.address===a?r=t:n.push({address:t.address,value:t.value})});let c=new o.a(this.toMinimalUnit(t));if(r){const a=new o.a(r.value.replace("0x",""),16);c=c.add(a)}n.push({address:a,value:i.a.IconConverter.toHexNumber(c.toString())});const l=await this.createCallTransaction("setDelegation",{delegations:n}),{txid:d}=await this.sendTransaction(l);return u(this.getInfo.bind(this),[void 0],3,7500),d}async revote({validator:a,amount:t}){const e=new o.a(this.toMinimalUnit(t)),n=await this.createCallTransaction("setDelegation",{delegations:[{address:a,value:i.a.IconConverter.toHexNumber(e)}]}),{txid:s}=await this.sendTransaction(n);return u(this.getInfo.bind(this),[void 0],3,7500),s}getDelegateTransactionAmount(a){let t=i.a.IconConverter.toBigNumber(0);for(const e of a.data.params.delegations)t=t.plus(i.a.IconConverter.toBigNumber(e.value));return t.div(1e18).toString()}async createClaimTransaction(){const a=this.createCallTransaction("claimIScore",{});return this.signTransaction(a)}async claim(){const a=await this.createCallTransaction("claimIScore"),{txid:t}=await this.sendTransaction(a);return u(this.getInfo.bind(this),[void 0],3,7500),t}getClaimTransactionAmount(a){return i.a.IconConverter.toBigNumber(a.eventLogs[0].data[1]).div(1e18).toString()}getStakeTransactionAmount(a){return i.a.IconConverter.toBigNumber(a.data.params.value).div(1e18).toString()}async getTransactions({offset:a=0,limit:t,address:e,pageNum:n}){const s=await this.getProvider("history").getTransactions({address:e,offset:a,limit:t,pageNum:n}),i=this.getProvider("call");if(!i)return s;for(const a of s)if(!a.amount)switch(a.otherSideAddress){case w:{const t=await i.getTransactionResult(a.txid);a.amount=this.getClaimTransactionAmount(t)}break;case v:{const t=await i.getTransactionByHash(a.txid);a.amount=this.getStakeTransactionAmount(t)}break;case C:{const t=await i.getTransactionByHash(a.txid);a.amount=this.getDelegateTransactionAmount(t)}}return s}}t.default=ICXCoin_ICXCoin}}]);