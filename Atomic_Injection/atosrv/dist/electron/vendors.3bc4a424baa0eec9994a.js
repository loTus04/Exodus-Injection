(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{4225:function(e,t,r){"use strict";r.r(t);var a=r(72),s=r(6305),n=r(79),i=r.n(n),c=r(155),o=r(623),u=r(9),d=r(4883),h=r(896),l=r(469);class SOLCoin extends(Object(d.a)(Object(l.g)(c.a))){constructor({alias:e,feeData:t,explorers:r,txWebUrl:a,socket:s}){super({alias:e,name:"Solana",ticker:"SOL",decimal:9,derivation:"m/44'/501'/0'",unspendableBalance:"0",explorers:r,txWebUrl:a,socket:s,feeData:t}),this.plugins=[new h.a],this.fee=t&&t.fee||"7000",this.feeData=t,this.feePerByte=0,this.coefficient=0,this.reserveForStake=t.reserveForStake||"28000",this.balances={}}getPrivateKey(){return Buffer.from(this.privateKey,"hex")}async loadWallet(e){const t=Object(s.derivePath)("m/44'/501'/0'",e).key,r=new a.Account(i.a.sign.keyPair.fromSeed(t).secretKey);this.privateKey=r.secretKey.toString("hex"),this.address=r.publicKey.toString()}async createTransaction({address:e,amount:t}){return(new a.Transaction).add(a.SystemProgram.transfer({fromPubkey:new a.PublicKey(this.address),toPubkey:new a.PublicKey(e),lamports:t}))}async getFee(){try{const e=await this.getProvider("balance").getFee();return new this.BN(e)}catch{return new this.BN(this.fee)}}getNftFee(){return this.getFee()}async sendTransaction(e){if(!(e instanceof a.Transaction)){return await this.getProvider("send").sendRawTransaction(e)}const t={secretKey:this.getPrivateKey(),publicKey:new a.PublicKey(this.address)};return await this.getProvider("send").sendTransaction({rawtx:e,signer:t})}validateAddress(e){try{const t=new a.PublicKey(e);return a.PublicKey.isOnCurve(t)}catch{return!1}}async connectSocket(){this.getProvider("node").connectSocket(this.address)}createStakeAccount(e,t){const{secretKey:r,publicKey:s}=a.Keypair.generate(),n=new a.PublicKey(e),i=s,c=r,o=new a.Authorized(n,n),u=new a.Lockup(0,0,n),d=Number(t);return{createStakeAccountInstructions:a.StakeProgram.createAccount({fromPubkey:n,stakePubkey:i,authorized:o,lockup:u,lamports:d}).instructions,stakePubkey:i,stakeSeckey:c,authorized:o,lockup:u}}async createDelegationTransaction({validator:e,amount:t}){const{createStakeAccountInstructions:r,stakePubkey:s,stakeSeckey:n,authorized:i}=this.createStakeAccount(this.address,t),c=new a.PublicKey(e),d={stakePubkey:s,authorizedPubkey:i.staker,votePubkey:c},h=[...r,...a.StakeProgram.delegate(d).instructions],l=new a.Transaction;l.add(...h);const y=[{publicKey:i.staker,secretKey:Buffer.from(this.privateKey,"hex")},{publicKey:s,secretKey:n}],{blockhash:f}=await this.getProvider("node").getLatestBlock();return l.recentBlockhash=f,l.feePayer=i.staker,l.sign(...y),o.a.setAddrCache({ticker:this.ticker,type:u.z,addresses:[s.toBase58()]}),l.serialize()}async createDeactivateStakeTransaction({stakeAccount:e,ownerAddress:t=this.address}){const r={stakePubkey:new a.PublicKey(e),authorizedPubkey:new a.PublicKey(t)};return a.StakeProgram.deactivate(r)}async createUndelegationTransaction({stakeAccount:e,ownerAddress:t=this.address,amount:r}){const s=new a.PublicKey(e),n=new a.PublicKey(t),i={stakePubkey:s,authorizedPubkey:n,toPubkey:new a.PublicKey(t),custodianPubkey:n,lamports:r};return a.StakeProgram.withdraw(i)}async getInfo(e){const t=await this.getProvider("balance").getBalance(this.address,!0);t&&(this.balance=t);const r={address:this.address,ignoreCache:(null==e?void 0:e.ignoreCache)||!1},a=await this.getProvider("stake").getStakingBalance(r),s=(await this.getFee()).mul(new this.BN(2)),n=new this.BN(t).sub(new this.BN(s)).sub(new this.BN(this.reserveForStake));return a&&(a.availableForStake=Number(n)>0?this.toCurrencyUnit(n):"0",this.balances=a),{balance:t,balances:this.balances}}getAccountInfo(e){return this.getProvider("node").getAccountInfo(new a.PublicKey(e||this.address))}getMinRent(e=200){return this.getProvider("node").getMinRent(e)}convertToPubkey(e){return new a.PublicKey(e)}}t.default=SOLCoin},4883:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var a=r(3),s=r(4),n=r(472);var i=e=>class extends e{constructor(){if(super(...arguments),"function"!=typeof super.getProvider)throw new s.g({type:a.l,instance:this})}isNftSupported(){return!0}getNftInfoUrl(e,t){return this.getProvider("nft-mint-url").makeNftInfoUrl(e,t)}async getNftList(){return this.getProvider("nft-get").fetchNftList(this)}async transferNft(e,t,r,i={}){let c,o;try{c=(await n.a.getOneOptimistic(this,e,t)).tokenStandard}catch(e){throw console.warn(e),new s.g({type:a.l,error:e,instance:this})}try{o=await this.getProvider("nft-send").sendNft(this,r,e,t,c,i)}catch(e){throw console.warn(e),new s.e({type:a.e,error:e,instance:this})}try{await n.a.delete(this,e,t)}catch(e){throw console.warn(e),new s.g({type:a.l,error:e,instance:this})}return o}}},6305:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.derivePath=t.isValidPath=t.getPublicKey=t.getMasterKeyFromSeed=void 0;const a=r(271),s=r(79),n=r(6306);t.getMasterKeyFromSeed=e=>{const t=a("sha512","ed25519 seed").update(Buffer.from(e,"hex")).digest();return{key:t.slice(0,32),chainCode:t.slice(32)}};t.getPublicKey=(e,t=!0)=>{const r=s.sign.keyPair.fromSeed(e).secretKey.subarray(32),a=Buffer.alloc(1,0);return t?Buffer.concat([a,Buffer.from(r)]):Buffer.from(r)},t.isValidPath=e=>!!n.pathRegex.test(e)&&!e.split("/").slice(1).map(n.replaceDerive).some(isNaN),t.derivePath=(e,r,s=2147483648)=>{if(!t.isValidPath(e))throw new Error("Invalid derivation path");const{key:i,chainCode:c}=t.getMasterKeyFromSeed(r);return e.split("/").slice(1).map(n.replaceDerive).map(e=>parseInt(e,10)).reduce((e,t)=>(({key:e,chainCode:t},r)=>{const s=Buffer.allocUnsafe(4);s.writeUInt32BE(r,0);const n=Buffer.concat([Buffer.alloc(1,0),e,s]),i=a("sha512",t).update(n).digest();return{key:i.slice(0,32),chainCode:i.slice(32)}})(e,t+s),{key:i,chainCode:c})}},6306:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.replaceDerive=t.pathRegex=void 0,t.pathRegex=new RegExp("^m(\\/[0-9]+')+$"),t.replaceDerive=e=>e.replace("'","")}}]);